<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 3.3.5) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-correia-scim-use-cases-01" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2024" month="October" day="21"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 48?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 52?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
 The specifications have two primary goals:
   1. A common representation of a resource object and its attributes.
   2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
 These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:</t>

<t><list style="symbols">
  <t>CRUD: Create, Read, Update, Delete</t>
  <t>ERC: External Resource Creator</t>
  <t>IaaS: Infrastructure as a Service</t>
  <t>IDaaS: Identity as a Service</t>
  <t>IdM: Identity Manager</t>
  <t>JIT: Just In Time</t>
  <t>RC: Resource Creator</t>
  <t>RU: Resource Updater</t>
  <t>RM: Resource Manager</t>
  <t>RS: Resource Subscriber</t>
  <t>RO: Resource Object</t>
  <t>RA: Resource Attribute</t>
  <t>SaaS: Software as a Service</t>
  <t>SAML: Security Assertion Markup Language</t>
  <t>SCIM: System for Cross-domain Identity Management</t>
  <t>SET: Security Event Token</t>
  <t>SSO: Single Sign-On</t>
</list></t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +--------+
 |  SCIM   |                       |        | 
 | Server  |                       |        | 
 |         | <--- SCIM Action ---  |  SCIM  |
 | /Users  |                       | Client |
 | /Groups |                       |        |
 | /Device |                       |        |
 +---------+                       +--------+
  Figure 1: SCIM Components
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="resource-object-ro"><name>Resource Object (RO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="resource-attribute-ra"><name>Resource Attribute (RA)</name>
<t>A named element of a Resource Object (RO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the Resource Object (RO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific Resource Attributes (RA) of a Resource Object (RO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific Resource Attributes (RA) and/or Resource Objects (RO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms Resource Objects (RO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes Resource Objects (RO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about Resource Objects (RO) and their Resource Attributes (RA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RO) Resource| |(RA) Resource|   |(RO) Resource| |(RA) Resource|
   |   Object1   | |  Attribute1 |   |   Object2   | |  Attribute2 |
   +-------------+ +-------------+   +-------------+ +-------------+
          |               |                 |               |
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RC) Resource| |(RU) Resource|   |(RC) Resource| |(RU) Resource|
   |  Creators   | |  Updaters   |   |  Creators   | |  Updaters   |
   +-------------+ +-------------+   +-------------+ +-------------+
       |               |                 |                |
       +--------+------+-----------------+-------+--------+
                |                                |
                v                                v
       +----------------+              +----------------+
       | (RM) Resource  |              | (RM) Resource  |
       |     Manager    |              |     Manager    |
       +----------------+              +----------------+
                |                                |
       +----------------+              +----------------+
       |                |              |                |
       v                v              v                v
  +-------------+ +-------------+   +-------------+ +-------------+
  |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
  |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
  +-------------+ +-------------+   +-------------+ +-------------+
          |                                  |
    +----------------+                  +----------------+
    |                |                  |                |
    v                v                  v                v
 +-------------+ +-------------+   +-------------+ +-------------+
 |(RO) Resource| |(RO) Resource|   |(RO) Resource| |(RO) Resource|
 |   Object1   | |   Object2   |   |   Object1   | |   Object2   |
 +-------------+ +-------------+   +-------------+ +-------------+
        Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
          Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some Resource Attributes (RA) of a Resource Object (RO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional Resource Attributes (RA) of the previously created Resource Objects (RO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
              Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual Resource Objects (RO) or Resource Attributes (RA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of Resource Objects (RO) and their Resource Attributes (RA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of Resource Objects (RO) and their Resource Attributes (RA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
         Figure 7:  SCIM actions aggregated by a SCIM server then transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:<op> id:xyz</op></t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
 In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
         Figure 8:  SCIM actions aggregated by a SCIM server then transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:<op> id:xyz</op></t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
 Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
 The Resource Subscriber (RS) will decide which RA (Resource Attributes) to consider and how the RO (Resource Object) will appear in its resource database.
 Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the single-tenant RS.
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 9: Single-Tenant Resource Subscriber that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 10: Single-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the multi-tenant RS (Resrouce Subscriber).
 A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

         Figure 11: Multi-Tenant Resource Subscriber that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.
~~~
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+</t>

<figure><artwork><![CDATA[
     Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client ~~~
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant Resource Attributes (RA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates Resrouce Object (RO) either in central IdM (Identity Management) system or directly in a target aplications.
~~~
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 13: Single-Tenant Resource Creator/Updater that is the SCIM Client
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.
~~~
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 14: Single-Tenant Resource Creator/Updater that is the SCIM Server
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates Resource Objects (RO) either in a central IdM (Identity Management) system or directly in target applications.
~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 15: Multi-Tenant Resource Creator/Updater that is the SCIM Client
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). 
~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 16: Multi-Tenant Resource Creator/Updater that is the SCIM Server
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive Resource Objects (RO) and their Resource Attributes (RA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which Resource Attributes (RA) to obtain from each source. There might also be independent agreements for different groups of Resource Objects (RO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the Resource Objects (RO) or some of their Resource Attributes (RA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 17: Single-Tenant Resource Manager that is the SCIM Server
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of Resource Objects (RO) and their Resource Attributes (RA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 18: Single-Tenant Resource Manager that is the SCIM Client
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 19: Single-Tenant Resource Manager that is the SCIM Client and SCIM Server
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull
~~~
                  Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
              +-----------------------+ 
   Figure 20: Single-Tenant Resource Manager that is the SCIM Server and SCIM Client
~~~</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The Resource Object (RO) of the device, provided by the manufacturer, includes its Resource Attributes (RA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the Resource Object (RO) in the customer's device database, it will be the server's responsibility to add and update the Resource Attributes (RA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the Resource Object (RO) to the customer's device management platform.
~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 21: Manufactor is the SCIM client and push RO to Customers 
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the Resource Object (RO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the Resource Object (RO) from the multi-tenant SCIM server provided by the manufacturer.
~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 22: Manufactor is the SCIM Server and Customers Pull information about Device
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional Resource Attributes (RA) to be added to the Resource Object (RO) that is maintained in the device manager.
~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | &lt;------&gt; | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | &lt;------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | &lt;------&gt; | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | &lt;---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
         Figure 23:  Commissioner tool provide Resource Attribtues to Device Manager
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.
~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | &lt;------&gt; | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------&gt; | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | &lt;------&gt; | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------&gt; |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
         Figure 24: Device manager provides RO and RA to the Devices through Commissioner Tool
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.
~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | &lt;------&gt; | RA |
|  SCIM  | -------------&gt; |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | &lt;------&gt; | RA |
+--------+                +---------------+          +----+
         Figure 25:  Device Manager provide Resource Attributes to the Commissioner tool to configure device
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the Resource Attributes (RA) of a Resource Object (RO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized Resource Attributes (RA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective Resource Attributes they are responsible for. They will use the SCIM action of Active Push to pass the Resource Attributes of the Resource Object to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.
~~~
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------&gt; ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || &lt;------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
         Figure 26: Single Ro with diferent RA authority implemented between the Provision Domain and the customer SaaS App 
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the Resource Objects (RO). The Active/Delta Pull method will be used to retrieve the specialized Resource Attributes that are the responsibility of the application.
~~~
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------&gt; |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | &lt;------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
         Figure 27: Single RO with diferent RA authority implemented between the Provision Domain and the customer SaaS App 
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that Resource Objects (RO) and its Resrouce Attributes (RA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
         Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>

<reference anchor="Device Schema Extensions to the SCIM model" target="https://datatracker.ietf.org/doc/draft-shahzad-scim-device-model">
  <front>
    <title>Device Schema Extensions to the SCIM model</title>
    <author initials="M." surname="Shahzad" fullname="M. Shahzad">
      <organization></organization>
    </author>
    <author initials="H." surname="Iqbal" fullname="H. Iqbal">
      <organization></organization>
    </author>
    <author initials="E." surname="Lear" fullname="E. Lear">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>
<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>


    </references>

</references>


<?line 969?>



  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+19a3MbN7Lod1XpP+A4HyLdUHTseDe7ulupQ8vOWjlR5CXl
u/ecrdQtcAYkEQ8HXGBGMlOq/e23uhvPefAhKYmdFT/Y1BCDR6PR726cnJwc
HpiKl/n/44UqxSmrdC0OD3KVlXwpTlmu+aw6yZTWQvITk8nlSW3EScaNMCdf
Pjs8kCuNL5nq+Zdf/vnL54cHpp4upTFSldV6JU7Z+eurbw8P3ov1jdL5KfvH
eVkJXYrq5BX0PWCTs/OLHw8PbpR+P9eqXp3ik8ODw4OMV6dMljN1eFDJqhCn
7PPJ2lRiyWZKszOtjDnJ1ZLLkp3noqxktWYXvORzsRRldcpeiZksZSVVaQbs
8lroayluBuxMlZlYVWbAeJmzsfhnLTW+YT4/PODTqRbXMNLZ+QV7ZwQ7g7V+
fnjwPS/np0yUhwe8rhZKnx4enDCC0lteF4p9p/RcsDOC1eEBY0rPT9mZNJli
NG8DT8WSy+KUrXiNYP3PDBoMM7WEJYcel6Lg7JUs54XwfV3ITCujZhWMslKa
w9qiPj9f4WvDHF/7z6VrDr1/Dt2XSi95Ja/FKbw1/vbs+bNnfz6FXwDMjd++
/uOLr6LvL9z3Pz979mX0/bn7/qcXz77G76/EtcwEm2QLseTs9YdKlIAOhlWK
VQuB+8uWKhcFNmeMVVzPRXXKFlW1MqdPn+a84pXm2Xuhh1JUs6HS86e5yp4S
PpoFX/zMc8LHHEc7wf5cd4Qtu8/Dvuc3Fv9ye3ExZBMasPHDmyE7/+eUF43H
r4fse8G1fZrzSpyy518+/+rky68ZPMRh32o1k4VATJ6IrNaAvK+vRVmxK/Ve
lOaOoIFHBBcBnZkUIrsNvREab4fsTV1Wjac/DNkZX578XZZz0fztYsj+SxrR
B5DDg5OTE8anBlZVwd9XC2lYrrIaDiVbaXUtc2FYHh9nZY8znmEjCpFVIme1
EQxpE1Mz2uLd6QU7AugcDxk7r1jB14apusJODHbyuWGZpxyINZaCzAp1Y7/K
iskyK2qYrp+L/Wm5KnAcPLTQlZG5oCNshg4MS5nncOAPDz5j52WlVV5n9pBf
3Wk5bMaXslgDPMxKZHImMxqS/cMe8R9xevavFz8ygL0wcl6KHA7KEntkWhhV
64zWlTNZImRWsGVwxtSMSTeHZZhDteAVKwX1NBUsU8tlXcIURM44UCfDpOUH
jNZi7I5qOLtmwG5ktYAxNf2ALMIwbnD8XMx4XVTR7Ey9WikN3R9Bc14yQed+
KgucHGwcApDnOSITL/zrMYodDy3MG2Bb8GvBqhvFVlouuV6zueKFPa3PhmyE
a1Ql02KlhfH7rWaMh3HU9CeRVRZlDONVpeW0rgQgAmPs+ZBNgClzncufRc5W
vAIYGZz3Qt2waqFMvCcZLwG8agUIJXKmyoFFRFnO2ZOz8btXT+yvuIijMy14
JQZsLHg+YO9WOf71ShSiEsc4TGOuBP2l0oLx/JqXmchp5czU2QL2wwiuswWb
yaIS2gyYWZfZQqtS/uwhUAAtCz2v1KouuD3QososxI2wPXMNGJPLmQRsMYwD
7eB2C2UZMHjAbhYyW9D2CRMAM4hAS8fQYYxBpgAPDbsRRUH9r7SqVKaKCBHY
tJZFxVTJ3lxdvY2GffHjkL1cM+M3CkCNSBkmCSP6PhOohkMyYHButGAiU0Rp
aD95tpDiWrCpgM2nY4JbSJg8YMbSblqYyXhhf0JqwvahomYQ0baIngV6iifZ
0zA4jUu+9ke7LnOhERL2WAL9wB74alXIzE7MU2VgQ7QDDTKEv3iIRZB+Vxby
vWBGLYX/3TB8NqIhcLNeapnPYSMA2N+K3J6HUZYJY9hLsVZlzv4upuxo9PLb
0ctjGnR08f1zeDqZXA78FAhc+AWkBuiUEOgkeaZm0TmUJePMiBWHYQGklfhQ
sZlWS+SmsNE00SH7+wJ4MA4mE9RDSAesEkTpluqaSKqaEYKpslgDbtwIURI9
4rqSdg4WWbNCirI6AWIqNKHkgFUJXuTSZLWBHW4wKE9zcD6ICBZD2JTACNPK
gCDYnYyR3Z1IOMKlAOADqUwxBQgZrp9nRJUA62fIQitFtEIzoCmyEllVa0Fs
8jN2JfRSlqpQ8zUIC4K9F2sG2oVhTy7eTa6eDOh/9sMlfh+//tu78/HrV/B9
8mb0/ff+i2sxeXP57vtX4Vt48+zy4uL1D6/o5YvRfz+hg/Hk8u3V+eUPo++f
ECuMQQprJnaHZ3alRUX0Kxcm03JK7PMfVvr+kd0sBHLTNRwWweGoM5jb2ejt
ZGgJIq0OjhwvjIoapkPLkhXqRmg4szDiqgDp4HU5L6RZUCcDELWINwupmdcI
2FJwQGgzZG+EFoSUhTSIccCqy/WSmACpSNKykiAORBNBleJ/MeA7p2wTr4FW
r8dnpyida+DFY0ch8TWlGTQ553xyys7Lmeam0jViA1HsCQkK2OgVtXJySOv3
/OK0KSlp+OG786tT9l1tKnZesiu5xNYwqeZc8Pm76Dkthp5fRM9t5zj38ST6
YVJPCQfsb5fRb5ckFODzUfR85FgY/jTBRU7UrLrhHUAAWnYaxPqRMULjeb7g
+n29YqDF1nxObc/OL073kSnxpddXp51qA/44uTxlE9Q+2UTOy5PLEjABDi2e
9DO1XKkS9BLEpFF0uJ2EiwQhek6I2EHJWIaMCKUdxiNEtnSKRK4njjgPn3iI
OiFuvRKGHTn5haOUyUAyJCnzmI664NmC1aX8Zw0HGkgXybuROAc9wTy9zCdy
Nl0zzr6bXP5gBagB48iERM6uJQc2EUt449eTKzZ6ez5kr2G4pqBo5TsSGuC4
5fJa5jUvQLJHOjCti/esNsilLDlFwj1de5EH0MUKs4EEgTL/4xFyi7++vhqw
t+/gn8vJFUlkxwM2ratAeMSHFTJ5FbiB9CK2Kj0BAPnPy4UWV1AhZRWqmOxo
8vrKHA9JSqH9FCWfFqC66Tl3UiPq6h6szFspYMunoJ/hnkWCJHMyiFUUSFJu
t9ICGSZsJEEtcLNE3iccqBStEb+pagHy2BL0DF5WiWoEPUXQAJXcOGXJ8KWw
6phVa+DpQs4XJ4W4BoQOiLsSGlYK3SUsEhWLVDAfpi20MLDZst2QiLcxKpMo
FKEY8WSprmU5fxJECYADnjaviAmNYjI9NTjStSjWbFWbBXH9uiiSvUHU02JW
4LjZgpdz2Fg4u5VcCrvtQRu0+gHOyKGBk4UBUrJMtEOrObpHsCek+TBFC5hp
YRbCVGyljJHTQrBroY0dxZ4pU/FKoETxr3/96/CAfXHiPl+w7o9v8cXhAbu1
hhwG3zo/t+ELtp8Q8dq5ffjzL2AawNFGuMsM/g4zuMXmT9+hkryh+zPaVtv8
r3RAts+Gmltj2k7N9wQl+1bOgdI/O21yCbs3ljeAOEUScFAi4sMKJBjJRV4D
UcYDbQiNMwXS7Qerg3RoYbF2PF1b+R+On1Xnrb7IUqOCKp1UHamRUyDP5TzQ
QkTQ2QxIUKzIiw94MIj4SOPEaCIijjsEZWcI0gkwkDITA7A0cbk0ZKF5L+Dv
GTfVgGULwVeOcxmUuUF3SJSUSg3QuKVm1JBrVQddzVmkAj82mSi5loroplca
iXgKzUyltBSp3WghihXLCq7lbI17gbuXC9BU1UokuyhmM6Urku4/Y+epIuLM
9TChlqYZGdluhFdHkchKruXPgqlaG1FcCyIkbAYSQi5hN2DXPReLp+NAfspe
AUG6sLa+t05DG6sCBrzUGdAYjVKqfXal5XyO5g+Ub7Jg3fvss8/i7g4PaCxn
sgANjgSSQAcrCQrdaSS3YKexsQj7/awlQx6NL48PD9goFkACG0UhAXduQGyS
HSE6OpS27VG5Juu6OSY5f0pbCXJ9fGCqhVb1fNGGIKovrdmBXky03C/FwgFH
cEfNCRDEwl2D2O5DR5tko2CbIAEL5iLKfKWkkzZBK18KtF20O3vxYwc0g+R9
NB4RQMGknTNReGWcdwJ/GG0THppoRCOIiD+H19O1WOMxcEywrAotTSUza+fI
QFgsORpSjgwJ2UqzZV1UcgUsjhe1MMcDQh8n3VZalvMBmypVCF4OgDpxvfbS
HUKwMdqRJp9YPrByr23t8Tg9CQ6VpWFTbkgeB+ijUOkw4X/HFolIsmAaumiC
yEum3jYNjqYfh2xUru1gIPuTzMPsdEE6IqlOZnLFUdYEzOCWiNF4jnKQFJe0
oMkFPMCHlmsfofj7vlQ3pdW53I/AFd+SuUgjjljjy42YxhSVZCJvV/LW8lhs
cnjbOEOjZCaoD4G+MKsLUBk8lhOPIQ0AzV2VSk2mOAN7XPA4V4pkOKVJhMO2
HTalYQxBqz2l5vOVciZ2KcLJhdkFKyUyW2SphAQEgpl0pv33Yp3aY60QjApX
xKnj3oHyVFUhy3lj20jWwSN7I6ZGVnhWWvtRG2tfSw2Pwe/h94ngyCWSrkAK
raPCbawmimdXCLBGYyuIpjgCYgbgqzCV3SBy8MVb7HfcCmzSydzMOLXfb+Vu
++cObptlHR4kD+kk4vkg8l7OvWERx6xA2EDNCW2dKdisRCNI+igNCHU4J9Tx
QM9wuhC6vrOKbM1DdngwKpkFNKwKMQxOM9A3UMpUPHFNvDYXK0GSliU4IJhw
QJ3IfNBB1Z1h6Wh8Zs+rHdnjsXWOZtDQ6YbdVP5qvZIZqOHWrgpTg9XOUKCS
JXszhjU0DEPknxtfHCciFwEY4N87EZ1IAmTBi5xHrL1Ya6FiR+N3mxdbQ0OU
PK1I3cEGDfLBfq4HS0VYXYJbSxSzfgA5s2Gmyp/qkug4CmhElxGviDUQVIoC
3V7SWImRFhHO6fZZ8zJ/Gm/FpdWKaSM7QOeMeLBRCehoRvO5FnNeocGCVZqX
BoiV6R6AfABe78gIBc3TmrYHGp09Hb8jfwQI9EiVloxfc1lwt0cdZkR4c3Js
lQYvCjRZpBni9D9wEJJI1nV7kam6yJEJBpPfCTcn/MQxtyM0rB6zrFC198x2
nKvItglzaoMMfN71UvSBCFHaoQvLlTDl5xWBCkT7G99a6VgIjld24xeDdtI2
vc9FIZGHcU+5YVhQHJAc29GIbYI0A8C6jOwnNAIQbBJLybdTsvHFU9zBAJd+
i/bR6yblwbktuOkwcG2AFR7/XnwHux0AkZWqClJRBYoY4Yelva8JdsYLn27p
hkyLtIpifTLjGQoXqZbozCeRTm81/+bfW1tgL7e4PreqW/h7FP+9tQX1wpgF
2DP865YF+DzDX0OL560Wz9ntA66oaSHp+bujxcOC9awBtHctsG5q4cBqkdg4
oL1zFIw5sG5q8cBg3R+mdgqpDSr5Lx6o8X+6oX1D9g7oP9fb3rluTzIGT/Rp
/x4BB0UMTyCaU23/3oCrY4DtVbZ/f4gJN7rf8HmQ4dqosWUWYdTWBl5v/NNu
6IPg/S3y++SYTloHeVML7ITF3Pq29ffWFg+2nF5gtz8W/Nt2vLsNvbtty7vb
0Lvb9ry7TWINvzucOnje5VaueJnuegdPTDhgJ9eMWzzQWuzHGv2fW6N/qoVa
3dRa/0GccpZVMAPbr6groWYsg4IKrsqMg12Yx44xtMFnWQ0KunsdNE3rLkMx
bgpSNBhOVlqhq9Ya3jioqxhuDe46tLCgL3OApsq8LsAiiNG2LDiT35XyA9jD
FgwOzapiui4piAj92VqV7Cc1HYCMNZlcsp9qU53I8gTcY64zrrVEpRnUDTbz
0UxaFGunmFvZ0dtSKJRIXEtVm2LN6tKALQBsvY2Foz1rKlI3NA08aJherc5+
uRLl+SuIhQanO7j3IUjvWzCqQvD+MN0XZ2Dy9g80Gm8JPIxsyqTRRE4vQ6aV
EJKWhNOkcTCwQGjoTAhOL6pohmwpwFAhDTlQXKQduo0VL1LfBJl6g1z/Vmip
cpkxTGS45mjLH4Gxih5L+9gPZsO7xEmmyhkifc74XAsyA9wsINomsUDClK21
0prAQPdwiIzI4NXdyJ0ajadmlQDczmqtXeBaUK3clsS94gHwiybDE6jsaNcH
ozUE3gXYS29IzAHG1hiW2rAShZNvAFBQQdm7H87/rz8cDKZLzgo6Q5Fy5YLb
KQCl6qYIAxeCZ/CclaqKAnmtSgpDLyCeiiBbri1IR8mOAFXB+GW/g2A7pc2B
eBF5LcqE3JD/HSwsgsx8fscc6XCUApVAvWY3Wlawaxj9BhtT57JihZoP4G08
bQTIQIzg2IEWZ92bMPCAAljIbRNbTVcFr3C2MRQasQMEDUcZLFBdLEtXzA+G
cRx3xrZBNsiPNBk6R9fkb9MEFrTbVYr9Y7eUhMg7E4d7Rkwhee7xAUk+Rdjx
fClLiRwGTKng8SrzE/RfIkbOeGYdEUteSgwVEXkLjcvUpuDoiZwvKsJg7HAJ
UctrazqUGhgKri9S7weW9VijaEoAovAPF8sJMTkYQIkk0zk/9eemHVVeRf5x
fxjJruaWEiYcBXqNAoRioyNH48s7AhR2fZ5fQICnYnK5FDmQkmLNbrh1ddsZ
xuZb3Wm4ChSpz1wjE0+L0MeRlX9yyY7SUDOwqaRPuhGB9igKyBUGXS+Bw4YI
Y3dMIa6OPR9+CUuyjPBMlaXIqiE7nyXsmfuYO2Tggrz9dlSAGhh6wCizFrAF
ogxBxnh8bHZSLkwlS2sKCoAZ4I8xpCxtCsc1Ik2JWHH03fnVcRLR3OAcCCSM
Vwoef8+fUsAi2SG6aShGDFYE1neYnt/vyMM7s8ZhirKzqIphWCbKKOkAY/dJ
CWJd4gKh0cFPA83BrgddpS7zf9nP4UFTT+gLV9mkW3xxeLDdDNH+dBh7fvNu
bEBT1I31QHV2c/TsuLMbF+dkI5na0/lLUztrfL7pWVVEMHZdVUxjSrcqpHkX
xz2ret69KkYkivXBeJdFRSzqmLp92E1HC/TT8aagtI5uxpNGN/efzQOdq/Cj
VRa/OrVI6igWaQmtkONwwn1eVokcw4ucqIaYQJDQ74JM0boAUODd3wU2ZD6D
K5asbiTRptKKajY7LiGQNHBuxXNAWRdXAzP/7vyKHGSR433T9Cg9zyuCrvNu
9xfMGTmBk/BhmlMKTGo5xyM3XeCTqO6h+JZsxYAJFHyt3mF9v5QWo2a4qKPv
LI+CyHuKpLDcyYUHS2P9F3XBNSi1RkDsA86jkQsEbDrOPSnkUlbBW1/WSzBf
qVmIefHhue/G33s/eax2EmyaQHBxW7GTLXG9mzSBL3KhgxIBvLlSJNm5WI5M
lSDxBlU3+NVtSGwz7moKyZarlZUzTWoMsb1fCz0NYgxFdmOQN4Z7v3r9/eur
1xTfk45JDlzvhuMGXHegWUht45dcoBqIAs10MZdWlAQ8vaCMPouJIey67dz3
6lczJsBr8uQbbocAIFajfD9LAgTZVGBMplNTgiBpWZyNsHhbmwVqE4k8jmEi
ETgjMCrN3o6uzt5E3kPnTU8ir8H3HB121OITEd3jWNaI+ijW7AnIOBim7RMM
rZTogn/sUYlFIwBaJPZW7f6JRlAaa9NL+TREDqBneujOwRJiam1ULHpEZQ5T
zMWqUGuwIVkVI8juTqnxMbVtLyeHmAGXDjseWZXZxp7TcYb+QDMFbg4yXRoU
1YwKTMP6+iW+O7GmLpnvTqyyi+V+NB1F0mCzUZ/o1yVCNmTIHWW/WIj8VWHU
L/9t62ibBHjS7X5wfbkIgn1X58S3jxKVHuy4pS2sOPjiNCF4mMJGyDaKqXlb
GrxCpRaFsqkgBdLmTgVji8uFAuLuGGUHw3Hc2IbHQXQ0TeHGRqA667Izy1hy
78TEK/ssDiOlmWlR1bq0AVVPx6OW+LcUFafwujj1RtlgKTQ6gA1xyKLopiZ8
igKt1y1m5wN4//r6CpkeZVZg4KJl+xj5kvKwv7usJu5FBGtivhaonw/i/CJc
5UxU2aJlqHeMMzVL22EODxpMG3o2SWQrSB2yqq2c5GwYdlwf7ePCOYHX+GoF
Ird1CqYqX4d8ocgr4s2rlB6rrQaR5xqcR1Ol3lN+l6sf4tISsGxLlLzXE9uj
+oN6HOaimZuYIWwWrS+CbHAbAGTJ+oPmEVgOJI4DvEPI3KXbTOt1sI40sB1D
0nG5ZuNLM2TfKm9ABJv0Uk3BpslXK6o1YjflGA1StK04pVpjqkUhMwHWcBTp
rAZkh7W5RT7grmXx6+Tfe5KSlGfvSdBuf+uX+3LNejixa44vh8SznViU49e/
5Jo3c9nmy9tmnRiMHE/1xpCdZ06c9Dfd6nuht39s2eMfnLVkA38E+h9OF4LO
s8iEKyCx9h6vMjAHcKxPkYpSPLwtxeRKB9w1fnHIUhYZCftt7hirDlDIbn5X
XpkkElggvVqXfCkz9rda6PWnxy0RfN4XGSbTaEf9uxhQnq6aHb362zGlbkfx
2CaeXqWYqacG1txkzPgGdo+8x+7c+NLP24a/XgubKpyzo1C9SAvM1cvIppFj
pEDuXiWOSKuifsEMRbDO7Qr+iStA4xZlzC+Bj5sl6JHaJkDScni0mJnKauOY
pYsIIeU1o3KBvPCZzZpTNtECMjIi3x2bAdMF2QL8n9r5lu3GS8PeyzKnAhvk
6aC4dwFpiZDBGCWr20TmQcTsYzS0sSyquAYvI1YXM5UoMxkZFn3+dV+yd1vQ
emS9e7Pe5OVH1rvDzMcTbD75HbHeP27TTBtM5X4s2HIaIjm5KCp+b/bLjCxt
Er3zIsQrGnby5o06bGNel/Ek9uLaMbNmq1qvlIlzoV9R+ZqxCB5ySLl2FdFk
HPXkywcAW0AHtYsX8LlYFBKHyfeVq1WCfNmWpmkFlmhhi4ws5IqZFaeov8Cr
ncGAF66AxZASww0F1kE9FYr/C75LL2QgP4EpsGuupS+cYdPuXPheYJ7eXLzi
60LxyBVuDcYCPCSl94WhqkrhCjDyFBRWFGUqTUaMsDfQLaDBEwL4yUvM/Y3A
/sSt4+jVy/FxEhQYadtRUpRlpo45eU4U51f6eiDc26BT8BNM+1hX62Rv91R+
EZ9zTzK2WsjaBCg8sbyBinfcuyNX1qOjWSw17zCj+GnE3XpmdPRV3CLRON3T
lOl1dNRmJn62DwZsYklgXfVre75tbd094ZScibafDe7Y0ca1AU8ka3B3R21d
9b6I9GBnxD+1vPDrVA01IXXSRRZGWgj6yDGbcgnhkFTLARtQyKe10/YS+bat
N/LlDhlL3fNjqxb5H74a2rBDrI0GROf0L2r1DZP56Yf1z8GKqk4usRgDzDB2
WUMvyCmESTkBVgSxfb+tp1CPz0YdjEUmICdx51DIiC/4hOsGEXWU11kho1Iz
SLbRlEehUnbwioob4EMsJOEcqNCe9FCahJ+u16YwWxXmA/UfiF94RaK5YFtb
DlkK9mOjCzO1WscjsiMxnA8H3iqPnUWiDrojz0uM190I1HgPBtZCgQKI1bRc
PrUfT2hzHLh/Icv3oDlBkLLyOy6NL8VmuVEjroFbHs5mAqpokAPzYvTfFCKK
erKvY1Qp0CTtgzAhVTIhUauEOtFN42vcf4ifdtEOEISJxaAo2pBq4tm6dHZ3
QNiw5Utj2crxXi+ZXClXUpnEn4yvfAHaJzD6k0Zkc1rLAxMAcoyxJEuHlR9w
k7RYqmuKam7shtXgoX+UNB95+SMvZ3fl5UcvOlrsycvba0s72ri23xEv/9Mv
wMt7mek2bn4/Vs4YexH1563hvlipv/zDqY4ujskFERkKErR6CL4T1SMTH7D6
LqwQ4m+s4Q7+sxW7qZA7lP3VIhQMyeIarKK8llqVS1JBMf2pqOQSqCkmKlHB
O6sbsXktcyyWA7JDDiUlQdk0mCZiXdZ2ru76gmiOyMEWYBNFJcwVzbPVWmV5
DaZFpMYvBeXXddSutrbJG+WrlwURpR30E1UzSQo6DtLSbm6WDmBJ+TY/Q6q1
Q8F4ZIwmrmWwMBhVLMUagGlJaVtfJYJ5R3HAYVo4J5Ssgui7wFOjaumKxnW1
73AFpVfXsaC3MwjMbPkT05V21kp6g2r0WGELy9JiFOYAYg01WkPQfmJXTO2p
Ek/uf6yiCC6Ehiq98SRgPEKlXSzIhRH01vxg6B7p/dXKfCZxiYAUgMXSXVYT
/gglBUWI/+QMzedR2JldZXLqYuN4Z30a7ybqLRITBSgCPbNpM5hpSVvRjMFU
Qdp32OyCjL1g5CvyQmlCMOxXTh6KD4U/KXEYqTtHg0jqb6TpUQ17HxqRVNxr
7gAa5XKRAbkgqXQ8Ykcd4Di2NX7xkpKYXIHl7qgBXNtvqEoOMA6Xath6Iji5
UA7oRrCZRBNg5Afx4ZoQwLHEdBIFl6KcGAzMSEoDhytXgmsHs11lyVR5stJi
KSlPFCIT6TSF9CEMUz65EiUvq154HR70QpKiRijYuaJefFEuK7hPRWurlE6T
JFN4GCEIHFTDPywizvfxa9hlES6LqpGdCcoTPrcHqlI5X/sMnTQF1KNd5NhC
1REpAphyLyKEsDEcxwM2Pose26BSW3Bw/C76ycaZHg/ivKXuU5ZU5UFcnEQd
hWUfR8HFUSQYmJMXKrdUhTtmbisCdeC1OU6N1L0HBTUq2gyLC+PJEGnhXKm8
ozxRiqFxNtdRFF+LmXFpvzxOISGEs6kMcOagOmEMI+8Yhko+9vca6CR57H0A
duw/5lhYXfMCkmTYUUcZ+GNbm7lhZG1Jkps+Xs6zppwHcC9uKcccf1ohMt7x
ttvLXYrNHT2E4YeTLZ9vWi//diEuRxM8B8e7vXx0RpW/9PFD+NmsKvLn0/vQ
vx7NwhKFk4Ro+2i6JKr0HkTYF6e8alJbH+q+iboNUk9gB61s0YIWPbQZCa/Q
KfcWvUpIHKHWJw0YiyZALn0lOhnlErRC9G168Ea6QXzbtEoQ/hJcxXd8V/L+
EZHxEIFqqzIP9qbYxPrUyu8qrcyoova+1Vbg7EZOKymXWYM+QoUKXXDReX7x
O+IQ26r3N17eMZLjkUPQGw/LIfDjLhX48k58wpHoe/CJpxFx9XrHBaj9m2ZC
ojkSDbJzxGF9OyktWEOdrB9J5AGRHrNJ6WhWYTCRsrF15tt0jaqRPPaodNxf
6cDNDToHNtaqTie2kYW1K2+0WFcySIwdn7QG0sFg9ns/MaV/sS/Zuo2bb4k0
7Hg7bh57jka7vu352d4c6jZuvjeLar+9D4+6jXnU3kyqNbZlUmx0vNPbR5b6
jY5v92ZTzf3+KLDl5SO2bHs7Gtthy8v9sOXl7wVbzh6xZdvb0dgOW872w5az
B8CW7W/EnyYf65Chn53eQ/y7r6mF3UcGdXL8o6XlU7C0/BJS6p5CKvlVZ9jO
akwhDG0PufTBrB73O8y/LeOwjGBnodRbTR4Zx7+hUGqxZWeh9BFb/p2FUost
Owulj9jyOxNKn99FKP1l7Lqdl4s9xSu3JonfJy6+yrBieSm8dLGtBFck/G28
qixJq/ZFbqjMqou08yF09prl3zTU6tOIrApW7OTCQ5+30Lt9YGLmxmB1XC0K
cZ1gaxMuJEbzKqrPMnk6vmia7e8bOwXCJdVkjF2YFhui3aU0xxIKGuoaYyZz
q8DgLb+8zAvhgEK7tDXIqge9o2CrZouPONiqtdl9FOeBAq461bINWtkD+jcg
DPQicjE4XfFXdXy4SkXdZNXni2IBQedU3KBZVpr7jNb4ILwZs6M39RJudrOz
6Lqs0SmVHiQxBbSICTHdO6qNAGGqr0kn018OyhOPXOBdH5mP/NOMorJ1k3ee
NpLj35eP/KteH/nO5O0BrXx3nYozOPbY+mx9uB1JXNMc9nEbAu10LRnZbO7b
k4H8oma9mPzCVbm/ZlAs3gnv7uPG21aRaUQVN9olOFKBA7hDr+U4vt2CikEX
IOy37rgIt5cT70hKXbjIjzfj9A4IqNBQ9qFqdLVMDFDgPkElgNh+VUgsU4wl
kPI8KS2+JfCgExt+gfCyvgO5Ie4shdXHzC8/zZiyR3757MXd+eUDeMUiA8SW
uLJeTWvfELOejraGmo0iMhiHzb4ZO49Oh6a121p+aUVrf1b5oMFkvYTvN1C2
Etdaj66Vbde1oFgDFHvAnW8rWOa4zRwjBaujjFXQsHZ3zTV1LK9h3UXFAmJy
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

-->

</rfc>

