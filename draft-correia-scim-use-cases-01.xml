<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 3.3.5) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-correia-scim-use-cases-01" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2024" month="October" day="21"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 48?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 52?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
 The specifications have two primary goals:
   1. A common representation of a resource object and its attributes.
   2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
 These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:</t>

<t><list style="symbols">
  <t>CRUD: Create, Read, Update, Delete</t>
  <t>ERC: External Resource Creator</t>
  <t>IaaS: Infrastructure as a Service</t>
  <t>IDaaS: Identity as a Service</t>
  <t>IdM: Identity Manager</t>
  <t>JIT: Just In Time</t>
  <t>RC: Resource Creator</t>
  <t>RU: Resource Updater</t>
  <t>RM: Resource Manager</t>
  <t>RS: Resource Subscriber</t>
  <t>RO: Resource Object</t>
  <t>RA: Resource Attribute</t>
  <t>SaaS: Software as a Service</t>
  <t>SAML: Security Assertion Markup Language</t>
  <t>SCIM: System for Cross-domain Identity Management</t>
  <t>SET: Security Event Token</t>
  <t>SSO: Single Sign-On</t>
</list></t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +--------+
 |  SCIM   |                       |        | 
 | Server  |                       |        | 
 |         | <--- SCIM Action ---  |  SCIM  |
 | /Users  |                       | Client |
 | /Groups |                       |        |
 | /Device |                       |        |
 +---------+                       +--------+
  Figure 1: SCIM Components
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="resource-object-ro"><name>Resource Object (RO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="resource-attribute-ra"><name>Resource Attribute (RA)</name>
<t>A named element of a Resource Object (RO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the Resource Object (RO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific Resource Attributes (RA) of a Resource Object (RO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific Resource Attributes (RA) and/or Resource Objects (RO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms Resource Objects (RO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes Resource Objects (RO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about Resource Objects (RO) and their Resource Attributes (RA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RO) Resource| |(RA) Resource|   |(RO) Resource| |(RA) Resource|
   |   Object1   | |  Attribute1 |   |   Object2   | |  Attribute2 |
   +-------------+ +-------------+   +-------------+ +-------------+
          |               |                 |               |
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RC) Resource| |(RU) Resource|   |(RC) Resource| |(RU) Resource|
   |  Creators   | |  Updaters   |   |  Creators   | |  Updaters   |
   +-------------+ +-------------+   +-------------+ +-------------+
       |               |                 |                |
       +--------+------+-----------------+-------+--------+
                |                                |
                v                                v
       +----------------+              +----------------+
       | (RM) Resource  |              | (RM) Resource  |
       |     Manager    |              |     Manager    |
       +----------------+              +----------------+
                |                                |
       +----------------+              +----------------+
       |                |              |                |
       v                v              v                v
  +-------------+ +-------------+   +-------------+ +-------------+
  |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
  |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
  +-------------+ +-------------+   +-------------+ +-------------+
          |                                  |
    +----------------+                  +----------------+
    |                |                  |                |
    v                v                  v                v
 +-------------+ +-------------+   +-------------+ +-------------+
 |(RO) Resource| |(RO) Resource|   |(RO) Resource| |(RO) Resource|
 |   Object1   | |   Object2   |   |   Object1   | |   Object2   |
 +-------------+ +-------------+   +-------------+ +-------------+
        Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
          Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some Resource Attributes (RA) of a Resource Object (RO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional Resource Attributes (RA) of the previously created Resource Objects (RO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
              Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual Resource Objects (RO) or Resource Attributes (RA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of Resource Objects (RO) and their Resource Attributes (RA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of Resource Objects (RO) and their Resource Attributes (RA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
         Figure 7:  SCIM actions aggregated by a SCIM server then transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:<op> id:xyz</op></t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
         Figure 8:  SCIM actions aggregated by a SCIM server then transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:<op> id:xyz</op></t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
The Resource Subscriber (RS) will decide which RA (Resource Attributes) to consider and how the RO (Resource Object) will appear in its resource database.
Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the single-tenant RS.
A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 9: Single-Tenant Resource Subscriber that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 10: Single-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the multi-tenant RS (Resrouce Subscriber).
A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

         Figure 11: Multi-Tenant Resource Subscriber that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.
~~~~~~~~
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+</t>

<figure><artwork><![CDATA[
     Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client ~~~~~~~~
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant Resource Attributes (RA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates Resrouce Object (RO) either in central IdM (Identity Management) system or directly in a target aplications.
~~~~~~~~
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 13: Single-Tenant Resource Creator/Updater that is the SCIM Client
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.
~~~~~~~~
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 14: Single-Tenant Resource Creator/Updater that is the SCIM Server
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates Resource Objects (RO) either in a central IdM (Identity Management) system or directly in target applications.
~~~~~~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 15: Multi-Tenant Resource Creator/Updater that is the SCIM Client
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). 
~~~~~~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 16: Multi-Tenant Resource Creator/Updater that is the SCIM Server
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive Resource Objects (RO) and their Resource Attributes (RA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which Resource Attributes (RA) to obtain from each source. There might also be independent agreements for different groups of Resource Objects (RO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the Resource Objects (RO) or some of their Resource Attributes (RA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~~~~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 17: Single-Tenant Resource Manager that is the SCIM Server
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of Resource Objects (RO) and their Resource Attributes (RA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~~~~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 18: Single-Tenant Resource Manager that is the SCIM Client
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~~~~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 19: Single-Tenant Resource Manager that is the SCIM Client and SCIM Server
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull
~~~~~~~~
                  Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
              +-----------------------+ 
   Figure 20: Single-Tenant Resource Manager that is the SCIM Server and SCIM Client
~~~~~~~~</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The Resource Object (RO) of the device, provided by the manufacturer, includes its Resource Attributes (RA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the Resource Object (RO) in the customer's device database, it will be the server's responsibility to add and update the Resource Attributes (RA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the Resource Object (RO) to the customer's device management platform.
~~~~~~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 21: Manufactor is the SCIM client and push RO to Customers 
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the Resource Object (RO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the Resource Object (RO) from the multi-tenant SCIM server provided by the manufacturer.
~~~~~~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 22: Manufactor is the SCIM Server and Customers Pull information about Device
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional Resource Attributes (RA) to be added to the Resource Object (RO) that is maintained in the device manager.
~~~~~~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | &lt;------&gt; | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | &lt;------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | &lt;------&gt; | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | &lt;---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
         Figure 23:  Commissioner tool provide Resource Attribtues to Device Manager
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.
~~~~~~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | &lt;------&gt; | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------&gt; | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | &lt;------&gt; | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------&gt; |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
         Figure 24: Device manager provides RO and RA to the Devices through Commissioner Tool
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.
~~~~~~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | &lt;------&gt; | RA |
|  SCIM  | -------------&gt; |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | &lt;------&gt; | RA |
+--------+                +---------------+          +----+
         Figure 25:  Device Manager provide Resource Attributes to the Commissioner tool to configure device
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the Resource Attributes (RA) of a Resource Object (RO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized Resource Attributes (RA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective Resource Attributes they are responsible for. They will use the SCIM action of Active Push to pass the Resource Attributes of the Resource Object to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.
~~~~~~~~
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------&gt; ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || &lt;------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
         Figure 26: Single Ro with diferent RA authority implemented between the Provision Domain and the customer SaaS App 
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the Resource Objects (RO). The Active/Delta Pull method will be used to retrieve the specialized Resource Attributes that are the responsibility of the application.
~~~~~~~~
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------&gt; |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | &lt;------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
         Figure 27: Single RO with diferent RA authority implemented between the Provision Domain and the customer SaaS App 
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that Resource Objects (RO) and its Resrouce Attributes (RA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
         Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>

<reference anchor="Device Schema Extensions to the SCIM model" target="https://datatracker.ietf.org/doc/draft-shahzad-scim-device-model">
  <front>
    <title>Device Schema Extensions to the SCIM model</title>
    <author initials="M." surname="Shahzad" fullname="M. Shahzad">
      <organization></organization>
    </author>
    <author initials="H." surname="Iqbal" fullname="H. Iqbal">
      <organization></organization>
    </author>
    <author initials="E." surname="Lear" fullname="E. Lear">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>
<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>


    </references>

</references>


<?line 969?>



  </back>

<!-- ##markdown-source:
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
TmU7DN2lBFxqyrN3hwf/H6M2e/7+IwEA

-->

</rfc>

