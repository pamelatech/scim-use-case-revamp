<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 3.3.5) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-correia-scim-use-cases-01" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2024" month="October" day="21"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 41?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 45?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
The specifications have two primary goals:
 1. A common representation of a resource object and its attributes.
 2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:
 * CRUD: Create, Read, Update, Delete
 * ERC: External Resource Creator 
 * IaaS: Infrastructure as a Service
 * IDaaS: Identity as a Service
 * IdM: Identity Manager
 * JIT: Just In Time
 * RC: Resource Creator
 * RU: Resource Updater
 * RM: Resource Manager 
 * RS: Resource Subscriber 
 * RO: Resource Object 
 * RA: Resource Attribute 
 * SaaS: Software as a Service
 * SAML: Security Assertion Markup Language
 * SCIM: System for Cross-domain Identity Management
 * SET: Security Event Token
 * SSO: Single Sign-On</t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +--------+
 |  SCIM   |                       |        | 
 | Server  |                       |        | 
 |         | <--- SCIM Action ---  |  SCIM  |
 | /Users  |                       | Client |
 | /Groups |                       |        |
 | /Device |                       |        |
 +---------+                       +--------+
  Figure 1: SCIM Components
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="resource-object-ro"><name>Resource Object (RO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="resource-attribute-ra"><name>Resource Attribute (RA)</name>
<t>A named element of a Resource Object (RO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the Resource Object (RO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific Resource Attributes (RA) of a Resource Object (RO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific Resource Attributes (RA) and/or Resource Objects (RO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms Resource Objects (RO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes Resource Objects (RO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about Resource Objects (RO) and their Resource Attributes (RA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RO) Resource| |(RA) Resource|   |(RO) Resource| |(RA) Resource|
   |   Object1   | |  Attribute1 |   |   Object2   | |  Attribute2 |
   +-------------+ +-------------+   +-------------+ +-------------+
          |               |                 |               |
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RC) Resource| |(RU) Resource|   |(RC) Resource| |(RU) Resource|
   |  Creators   | |  Updaters   |   |  Creators   | |  Updaters   |
   +-------------+ +-------------+   +-------------+ +-------------+
       |               |                 |                |
       +--------+------+-----------------+-------+--------+
                |                                |
                v                                v
       +----------------+              +----------------+
       | (RM) Resource  |              | (RM) Resource  |
       |     Manager    |              |     Manager    |
       +----------------+              +----------------+
                |                                |
       +----------------+              +----------------+
       |                |              |                |
       v                v              v                v
  +-------------+ +-------------+   +-------------+ +-------------+
  |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
  |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
  +-------------+ +-------------+   +-------------+ +-------------+
          |                                  |
    +----------------+                  +----------------+
    |                |                  |                |
    v                v                  v                v
 +-------------+ +-------------+   +-------------+ +-------------+
 |(RO) Resource| |(RO) Resource|   |(RO) Resource| |(RO) Resource|
 |   Object1   | |   Object2   |   |   Object1   | |   Object2   |
 +-------------+ +-------------+   +-------------+ +-------------+
        Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
          Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some Resource Attributes (RA) of a Resource Object (RO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional Resource Attributes (RA) of the previously created Resource Objects (RO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
              Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual Resource Objects (RO) or Resource Attributes (RA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of Resource Objects (RO) and their Resource Attributes (RA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of Resource Objects (RO) and their Resource Attributes (RA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
         Figure 7:  SCIM actions aggregated by a SCIM server then transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:<op> id:xyz</op></t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
 In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
         Figure 8:  SCIM actions aggregated by a SCIM server then transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:<op> id:xyz</op></t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
 Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
 The Resource Subscriber (RS) will decide which RA (Resource Attributes) to consider and how the RO (Resource Object) will appear in its resource database.
 Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the single-tenant RS.
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 9: Single-Tenant Resource Subscriber that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 10: Single-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the multi-tenant RS (Resrouce Subscriber).
 A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

         Figure 11: Multi-Tenant Resource Subscriber that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.
~~~
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+</t>

<figure><artwork><![CDATA[
     Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client ~~~
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant Resource Attributes (RA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates Resrouce Object (RO) either in central IdM (Identity Management) system or directly in a target aplications.
~~~
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 13: Single-Tenant Resource Creator/Updater that is the SCIM Client
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.
~~~
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 14: Single-Tenant Resource Creator/Updater that is the SCIM Server
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates Resource Objects (RO) either in a central IdM (Identity Management) system or directly in target applications.
~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 15: Multi-Tenant Resource Creator/Updater that is the SCIM Client
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). 
~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 16: Multi-Tenant Resource Creator/Updater that is the SCIM Server
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive Resource Objects (RO) and their Resource Attributes (RA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which Resource Attributes (RA) to obtain from each source. There might also be independent agreements for different groups of Resource Objects (RO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the Resource Objects (RO) or some of their Resource Attributes (RA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 17: Single-Tenant Resource Manager that is the SCIM Server
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of Resource Objects (RO) and their Resource Attributes (RA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 18: Single-Tenant Resource Manager that is the SCIM Client
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 19: Single-Tenant Resource Manager that is the SCIM Client and SCIM Server
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull
~~~
                  Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
              +-----------------------+ 
   Figure 20: Single-Tenant Resource Manager that is the SCIM Server and SCIM Client
~~~</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The Resource Object (RO) of the device, provided by the manufacturer, includes its Resource Attributes (RA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the Resource Object (RO) in the customer's device database, it will be the server's responsibility to add and update the Resource Attributes (RA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the Resource Object (RO) to the customer's device management platform.
~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 21: Manufactor is the SCIM client and push RO to Customers 
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the Resource Object (RO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the Resource Object (RO) from the multi-tenant SCIM server provided by the manufacturer.
~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 22: Manufactor is the SCIM Server and Customers Pull information about Device
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional Resource Attributes (RA) to be added to the Resource Object (RO) that is maintained in the device manager.
~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | &lt;------&gt; | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | &lt;------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | &lt;------&gt; | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | &lt;---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
         Figure 23:  Commissioner tool provide Resource Attribtues to Device Manager
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.
~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | &lt;------&gt; | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------&gt; | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | &lt;------&gt; | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------&gt; |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
         Figure 24: Device manager provides RO and RA to the Devices through Commissioner Tool
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.
~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | &lt;------&gt; | RA |
|  SCIM  | -------------&gt; |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | &lt;------&gt; | RA |
+--------+                +---------------+          +----+
         Figure 25:  Device Manager provide Resource Attributes to the Commissioner tool to configure device
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the Resource Attributes (RA) of a Resource Object (RO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized Resource Attributes (RA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective Resource Attributes they are responsible for. They will use the SCIM action of Active Push to pass the Resource Attributes of the Resource Object to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.
~~~
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------&gt; ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || &lt;------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
         Figure 26: Single Ro with diferent RA authority implemented between the Provision Domain and the customer SaaS App 
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the Resource Objects (RO). The Active/Delta Pull method will be used to retrieve the specialized Resource Attributes that are the responsibility of the application.
~~~
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------&gt; |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | &lt;------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
         Figure 27: Single RO with diferent RA authority implemented between the Provision Domain and the customer SaaS App 
~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that Resource Objects (RO) and its Resrouce Attributes (RA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
         Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>

<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <author initials="J." surname="Schreiber" fullname="J. Schreiber">
      <organization></organization>
    </author>
    <date year="2024" month="August"/>
  </front>
</reference>


    </references>

</references>


<?line 960?>



  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+19bXMbx7Hud1bxP8yRP5i8BiFLVuKEN+U6ECXH9DFNBaBu
7jkp163B7gCYaLGDzMySQkqV336ru+d1dwEQJG1LDvlBIoHdee3p16d7Tk5O
Dg+M5XX5/3ilanHKrG7E4UGpipovxSkrNZ/Zk0JpLSQ/MYVcnjRGnBTcCHPy
5bPDA7nS+JKxz7/88o9fPj88MM10KY2RqrbrlThl56+vvj08eCfWN0qXp+xv
57UVuhb25BW0PWCTs/OLnw4PbpR+N9eqWZ3iJ4cHhwcFt6dM1jN1eGClrcQp
+3yyNlYs2UxpdqaVMSelWnJZs/NS1FbaNbvgNZ+LpajtKXslZrKWVqraDNjl
tdDXUtwM2JmqC7GyZsB4XbKx+EcjNb5hPj884NOpFtfQ09n5BXtrBDuDuX5+
ePADr+enTNSHB7yxC6VPDw9OGK3SG95Uin2v9FywM1qrwwPGlJ6fsjNpCsVo
3AY+FUsuq1O24g0u638W8MCwUEuYcmxxKSrOXsl6XonQ1oUstDJqZqGXldIc
5pa0+fkKXxuW+Np/Lv3j0Prn0Hyt9JJbeS1O4a3xt2fPnz374yl8A8vc+u7r
37/4Kvn9hf/9j8+efZn8/tz//ocXz77G33Hp3mg1k5XArZqIotGwO6+vRW3Z
lXonaoOPMsYs13NhT9nC2pU5ffq05JZbzYt3Qg+lsLOh0vOnpSqeEi3CR0SI
AhozvhUikNt17d4J+4h/haUfsu+a2rY+/XHIzvjy5K+ynov2dxdD9l/SCN36
+PshmxQLLeQ0fFVyK07Z8y+fvzj58g8MN/zkhPGpgQlb+PtqIQ0rVdEAQbKV
VteyFIaVKSkrR8pIv0ZUorCiZI0RDM8lUzNmF4LtcVbYESzc8ZCxc8sqvjZM
NRYbMdjI54YV4dQsVSkqd3pmlbpxv0rLZF1UDQw3jMV9tVxV2A8SLDRlZCmI
fM3QL8NSliUQ++HBZ+y8tlqVTUEEfnWn2bAZX8pqDcthVqKQM1lQj+xvjrp/
wtG5v178xGDphZHzWpTMKrbEFpkWRjW6oGmVTNa4MCvYMVkIaF76MSzjGOyC
W1YLamkqWKGWy6aGIYiScTiYhknHChnNxbgN1deygKW7kXYBfWr6ArmjYdxg
/6WY8aayyehMs1opDc0fweO8ZuK9FbWRU1nh4GDfcAF5WSIt8Sq8nlLY8ZCW
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
4vTq/CEBAA==

-->

</rfc>

