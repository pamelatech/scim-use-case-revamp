<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 3.3.5) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-correia-scim-use-cases-02" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2024" month="October" day="21"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 41?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 45?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
The specifications have two primary goals:
 1. A common representation of a resource object and its attributes.
 2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:
 * CRUD: Create, Read, Update, Delete
 * ERC: External Resource Creator 
 * IaaS: Infrastructure as a Service
 * IDaaS: Identity as a Service
 * IdM: Identity Manager
 * JIT: Just In Time
 * RC: Resource Creator
 * RU: Resource Updater
 * RM: Resource Manager 
 * RS: Resource Subscriber 
 * RO: Resource Object 
 * RA: Resource Attribute 
 * SaaS: Software as a Service
 * SAML: Security Assertion Markup Language
 * SCIM: System for Cross-domain Identity Management
 * SET: Security Event Token
 * SSO: Single Sign-On</t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +--------+
 |  SCIM   |                       |        | 
 | Server  |                       |        | 
 |         | <--- SCIM Action ---  |  SCIM  |
 | /Users  |                       | Client |
 | /Groups |                       |        |
 | /Device |                       |        |
 +---------+                       +--------+
    Figure 1: SCIM Components
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="resource-object-ro"><name>Resource Object (RO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="resource-attribute-ra"><name>Resource Attribute (RA)</name>
<t>A named element of a Resource Object (RO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the Resource Object (RO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific Resource Attributes (RA) of a Resource Object (RO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific Resource Attributes (RA) and/or Resource Objects (RO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms Resource Objects (RO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes Resource Objects (RO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about Resource Objects (RO) and their Resource Attributes (RA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RO) Resource| |(RA) Resource|   |(RO) Resource| |(RA) Resource|
   |   Object1   | |  Attribute1 |   |   Object2   | |  Attribute2 |
   +-------------+ +-------------+   +-------------+ +-------------+
          |               |                 |               |
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RC) Resource| |(RU) Resource|   |(RC) Resource| |(RU) Resource|
   |  Creators   | |  Updaters   |   |  Creators   | |  Updaters   |
   +-------------+ +-------------+   +-------------+ +-------------+
       |               |                 |                |
       +--------+------+-----------------+-------+--------+
                |                                |
                v                                v
       +----------------+              +----------------+
       | (RM) Resource  |              | (RM) Resource  |
       |     Manager    |              |     Manager    |
       +----------------+              +----------------+
                |                                |
       +----------------+              +----------------+
       |                |              |                |
       v                v              v                v
  +-------------+ +-------------+   +-------------+ +-------------+
  |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
  |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
  +-------------+ +-------------+   +-------------+ +-------------+
          |                                  |
    +----------------+                  +----------------+
    |                |                  |                |
    v                v                  v                v
 +-------------+ +-------------+   +-------------+ +-------------+
 |(RO) Resource| |(RO) Resource|   |(RO) Resource| |(RO) Resource|
 |   Object1   | |   Object2   |   |   Object1   | |   Object2   |
 +-------------+ +-------------+   +-------------+ +-------------+
    Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
    Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some Resource Attributes (RA) of a Resource Object (RO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional Resource Attributes (RA) of the previously created Resource Objects (RO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
    Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual Resource Objects (RO) or Resource Attributes (RA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of Resource Objects (RO) and their Resource Attributes (RA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of Resource Objects (RO) and their Resource Attributes (RA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 7:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
 In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 8:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
 Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
 The Resource Subscriber (RS) will decide which RA (Resource Attributes) to consider and how the RO (Resource Object) will appear in its resource database.
 Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the single-tenant RS.
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 9: Single-Tenant Resource Subscriber that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 10: Single-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the multi-tenant RS (Resrouce Subscriber).
 A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 11: Multi-Tenant Resource Subscriber that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant Resource Attributes (RA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates Resrouce Object (RO) either in central IdM (Identity Management) system or directly in a target aplications.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 13: Single-Tenant Resource Creator/Updater that is the 
       SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 14: Single-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates Resource Objects (RO) either in a central IdM (Identity Management) system or directly in target applications.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 15: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects).</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 16: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive Resource Objects (RO) and their Resource Attributes (RA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which Resource Attributes (RA) to obtain from each source. There might also be independent agreements for different groups of Resource Objects (RO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the Resource Objects (RO) or some of their Resource Attributes (RA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 17: Single-Tenant Resource Manager that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of Resource Objects (RO) and their Resource Attributes (RA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 18: Single-Tenant Resource Manager that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 19: Single-Tenant Resource Manager that is the SCIM Client
      and SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 20: Single-Tenant Resource Manager that is the SCIM Server 
      and SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The Resource Object (RO) of the device, provided by the manufacturer, includes its Resource Attributes (RA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the Resource Object (RO) in the customer's device database, it will be the server's responsibility to add and update the Resource Attributes (RA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the Resource Object (RO) to the customer's device management platform.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 21: Manufactor is the SCIM client and push RO to Customers 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the Resource Object (RO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the Resource Object (RO) from the multi-tenant SCIM server provided by the manufacturer.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 22: Manufactor is the SCIM Server and Customers Pull 
      information about Device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional Resource Attributes (RA) to be added to the Resource Object (RO) that is maintained in the device manager.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | <------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | <---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 23:  Commissioner tool provide Resource Attribtues to 
      Device Manager
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------> | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------> |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 24: Device manager provides RO and RA to the Devices through
      Commissioner Tool
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | <------> | RA |
|  SCIM  | -------------> |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | <------> | RA |
+--------+                +---------------+          +----+
    Figure 25:  Device Manager provide Resource Attributes to the 
      Commissioner tool to configure device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the Resource Attributes (RA) of a Resource Object (RO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized Resource Attributes (RA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective Resource Attributes they are responsible for. They will use the SCIM action of Active Push to pass the Resource Attributes of the Resource Object to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.</t>

<figure><artwork><![CDATA[
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------> ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || <------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
    Figure 26: Single Ro with diferent RA authority implemented between
      the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the Resource Objects (RO). The Active/Delta Pull method will be used to retrieve the specialized Resource Attributes that are the responsibility of the application.</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | <------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
    Figure 27: Single RO with diferent RA authority implemented between
      the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that Resource Objects (RO) and its Resrouce Attributes (RA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
    Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>

<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <author initials="J." surname="Schreiber" fullname="J. Schreiber">
      <organization></organization>
    </author>
    <date year="2024" month="August"/>
  </front>
</reference>


    </references>

</references>


<?line 990?>



  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+1963MbR5Lnd0bwf6iVP5g8g5Ata8czvI2Jgyh5TJ9pagHq
5nYnHBeF7gJQo0YXtqqaFCYU+7dfZGY9uxsvkbIlD/lBIoHuembl85dZZ2dn
x0fG8rr8f7xStThnVjfi+KhURc2X4pyVms/sWaG0FpKfmUIuzxojzgpuhDn7
+tnxkVxpfMnYZ19//Sf4xDTTpTRGqtquV+KcXb66+f746K1Y3yldnrO/XdZW
6FrYs5fQ9oBNLi6vfjk+ulP67VyrZnWOnxwfHR8V3J4zWc/U8ZGVthLn7MvJ
2lixZDOl2YVWxpyVasllzS5LUVtp1+yK13wulqK25+ylmMlaWqlqM2DXt0Lf
SnE3YBeqLsTKmgHjdcnG4r8aqfEN8+XxEZ9OtbiFni4ur9gbI9gFzPXL46Of
eD0/Z6I+PuKNXSh9fnx0xmiVXvOmUuxHpeeCXdBaHR8xpvT8nF1IUyhG4zbw
qVhyWZ2zFW9wWf9XAQ8MC7WEKccWl6Li7KWs55UIbV3JQiujZhZ6WSnNYW5J
m1+u8LVhia/9r6V/HFr/EpqvlV5yK2/FObw1/v7i2Tff/OkcvoFlbn333R+e
f5v8/tz//qdvvvk6+f2Z//2Pz7/5Dn/HpXut1UxWArdqIopGw+68uhW1ZTfq
ragNPsoYs1zPhT1nC2tX5vzp05JbbjUv3go9lMLOhkrPn5aqeEq0CB8RIQpo
zPhWiED269q9E/YR/wpLP2Q/NLVtffrzkF3w5dlfZT0X7e+uhux/SyN06+Mf
h2xSLLSQ0/BVya04Z8++fvb87Os/MtzwszPGpwYmbOHvm4U0rFRFAwTJVlrd
ylIYVqakrBwpI/0aUYnCipI1RjA8l0zNmF0IdsBZYSewcKdDxi4tq/jaMNVY
bMRgI18aVoRTs1SlqNzpmVXqzv0qLZN1UTUw3DAW99VyVWE/SLDQlJGlIPI1
Q78MS1mWQOzHR1+wy9pqVTYFEfjNB82GzfhSVmtYDrMShZzJgnpkf3PU/QuO
zv31/BcGSy+MnNeiZFaxJbbItDCq0QVNq2SyxoVZwY7JQkDz0o9hGcdgF9yy
WlBLU8EKtVw2NQxBlIzDwTRMOlbIaC7Gbai+lQUs3Z20C+hT0xfIHQ3jBvsv
xYw3lU1GZ5rVSmlo/gQe5zUT76yojZzKCgcH+4YLyMsSaYlX4fWUwk6HtOSt
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
CNOBJSG1wyp5UBqI/naqmE8pysBNzymZz1FiBFl3A/nB3GrH/4PlTnHgbrgf
qRr1+VkGBmRTgfhLb5ZExdHJNYemeN2YBVoPmf6NkJBkOZNlVJq9Ht1c/JBE
Cn3kPMNZQ5w5OexotWcqeaCxooXwqNbsCeg0CMoOuYVOK/RAH3dUUlUIFi1R
c223feIRlLzajkg+jSgBjEIP/TlYAn7WIWAx+ilLGGIpVpVag8/ImRRRV/dG
TMDPdiOaHPABPg12PHImskOa03GG9sASBREOOlwOgGojAHMIX6+G90GiqE/H
+yDR2CdiP5mGEu2v/dAmVa9PZWzpjHvqeqnS+Kuu0WZ9b1dDuzS+s/4og2/L
AwUOnZ1X1z5JUnqw48ai6vf8PONwmKFGJDZK2Xem+d2gwYoK2FSQceiyoqIj
xWc5ASP3QrFHuHjJ62BvgHqm3u8cstR7jr3LxbF2rxLeuM9SeCiNTAvb6NoB
pZ6ORx1VbyksJ9hcmlSjHAgKHQrgHxyyBLXUXpqqQs90R7AFYO5fXt2ggKOM
CQQkOhGPiJZcXv3V5yvxoA449/GtQNt7kGYO4SxnwhaLjhPeC8nc5ey6OT5q
CWho2WSIVdAwpG2cTuT9E67fgOLxME2QK6EmgShdNYKpKtcxEyiJeATXKWXB
amctlKWGwNBUqbeUueXrg/h0A6zYkqTlbcDsqM1gHU+56MImwQebRfNLVjaG
BGBlybODrg+YDiSIw3pHKNy130wXUXBBMvALQ25xvWbjazNk36vgHAR/81JN
wV/JVysqJuI25RSdTbStOKRGYwpFJQsBnm5U35y147p1WUMBSNfx5rVl9YFs
I5fPBzKv97/1y5sSyDZIXf84vhyzyfYSR142f8w5b5eo7Zd3jTpzBnn5GRwd
e4+cpOZvutX3Im8W5eG/elfIFoEIXN/D8RKZmIkB5M4hfFVHaQBR8imyTQK2
u9pKviTAhwIRhyyXiYkm3xWHqV0AVdnmHyocs4wAtz4v1zVfyoL9eyP0+vMT
j7h8IbAYB9N6jtr3YE6ez5qdvPz3U8rCToDVJh2eVcw0UwNzbktifAObR2Hj
dm58HcbtcKy3wmX9luwkFiXSApPuCnJYlBj2L/2rJAJpVtQu+JhorUs3g//C
GaDnipLflyC4zRKMRO0yGWk6PJnMTBWN8dLRwzvIMi2o9h2vQpKy5pQWtIDU
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
41UlOAAiAQA=

-->

</rfc>

