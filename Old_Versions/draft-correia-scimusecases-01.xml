<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.1 (Ruby 3.2.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-correia-scimusecases-01" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2023" month="October" day="23"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 49?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 53?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model additional resource definition). The specifications have two primary goals: 1) A common representation of a resource object and its attributes, and 2) Standardized patterns for how those resources can be operated on, including "CRUD" operations that create, read, update or delete resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc. These goals are codified as a data model in <xref target="RFC7643"></xref> defining resources, attributes and default schema, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overview, concepts, flows, and use cases implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike the practice of some protocols like Application Bridging for Federated Access Beyond web (ABFAB) and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes movement of data only between two parties in a HTTP client-server model, implementation patterns are discussed in this document that use concepts beyond the core schema and protocol, but that are needed to understand how SCIM actions can fit into greater architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:</t>

<t><list style="symbols">
  <t>CRUD: Create, Read, Update, Delete</t>
  <t>RC: Resource Creator</t>
  <t>RU: Resource Updater</t>
  <t>RM: Resource Manager</t>
  <t>RS: Resource Subscriber</t>
  <t>RO: Resource Object</t>
  <t>RA: Resource Attribute</t>
  <t>ERC: External Resource Creator</t>
  <t>IaaS: Infrastructure as a Service</t>
  <t>JIT: Just In Time</t>
  <t>PaaS: Platform as a Service</t>
  <t>SaaS: Software as a Service</t>
  <t>IDaaS: Identity as a Service</t>
  <t>IdM: Identity Manager</t>
  <t>SAML: Security Assertion Markup Language</t>
  <t>SCIM: System for Cross-domain Identity Management</t>
  <t>SSO: Single Sign-On</t>
</list></t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>SCIM architecture is a client-server model centered on a normative concept of a "resource". Resources have types (such as a user or a group) and each unique instance of a resource type is represented by a JSON object, actively accessed via a standardized REST API.  Each resource object can be managed individually or managed in bulk using actions that by default are specified in <xref target="RFC9110"></xref> (HTTP GET, PUT, POST etc), but that may expand to concepts in extension documents, for example security event tokens (SETs). This model therefore enables organizations to represent information about user populations and the groups that these user populations are part of using the core specifications and to extend to other important resources using extension drafts in the same family with the high level concepts of performing SCIM actions on resource objects. SCIM actions result in resource object and associated data "moving" between the client and server, as clients actively push and pull information that reflects change over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
+---------+                       +--------+
|  SCIM   |                       |        | 
| Server  |                       |  SCIM  | 
|         | <--- SCIM Action ---> | Client |
| /Users  |                       |        |
| /Groups |                       |        |
+---------+                       +--------+
]]></artwork></figure>

<t>The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models.<br />
The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing a common schemas and extension model, as well as binding documents to provide patterns for exchanging this schema using standard protocols. In essence, make it fast, cheap, and easy to move resources in to, out of, and around the applications.<br />
The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="evolution-and-new-challenges"><name>Evolution and new Challenges</name>
<t>As the protocol has been adopt since its introduction in 2012, most of the IDMs and applications started to adopted it, mainly in the replacement of old protocols like LDAPv3. With the implementation the market started to reach more complex topologies, no longer the simple Client Server where there were only two SCIM entities. 
We start to see many different SCIM entities with different roles and doing its own manipulation of the object (RO) and its attributes (RA).
The maturity of the protocol also brought some challenges, that we don't plan to enumeratee all of them, but give a couple of examples.</t>

<section anchor="reconciliation"><name>Reconciliation</name>
<t>For some reason, the RO and its RA’s that was push by the Client was change in the Server (by some mechanism that was outside the SCIM agreement), which means that until the RO or one of its RA’s changes in the Client, there will be no “fix” to the RO and its RA that are in the Server.</t>

</section>
<section anchor="hr-applications"><name>HR Applications</name>
<t>This type of SCIM element doesn’t do any management to the RO and RA information, but it is the creator for RO and RA, most of the times have the RA that are generic to all applications (like firstname, lastname, national ID, office address, home address, etc.), most of the times this elements will not know RA like email, telephone number, etc. This RO and Ra needs to be available in the IdMs, for them to provide it to all the SCIM subscribers application.</t>

</section>
<section anchor="extra-ra-for-ro"><name>Extra RA for RO</name>
<t>Some SCIM application that are typically SCIM Servers, are the creators and updaters of specific RA, for example an email server that will be a SCIM server should create the email RA for all the RO, but should only consume the other RA like firstname, lastname, etc.</t>

</section>
</section>
<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases we need to understand 4 different concepts of the protocol, that will describe underlying protocol, the different orchestrators roles, how we start the SCIM interaction and what methods we have to execute the actions.</t>

<section anchor="data-model"><name>Data Model</name>
<t>SCIM defines two types of data entities: resources and attributes.</t>

<section anchor="resource-object-ro"><name>Resource Object (RO)</name>
<t>A JSON object representing a user, group (or extension object) to be manipulated through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be acted on via the endpoints and parameters defined in <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="resource-attribute-ra"><name>Resource Attribute (RA)</name>
<t>A named element of a Resource Object. Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary etc) and characteristics (required, unique etc).</t>

</section>
</section>
<section anchor="http-client-server-roles"><name>HTTP Client-Server Roles</name>
<t>HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol.<br />
A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API Security, managing client identifiers &amp; keys as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider.  The client initiates SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows.
An entity can have one or more orchestrators roles, depending on the overall provisioning architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the Resource Object (RO). Typically we can see this role in HR or resource management applications that are responsible for creating resources and some of its attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific attributes of a Resource Object (RO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage a specific Resource Attribute (RA).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms resource objects from resource creators/updaters (RC/RU) and make them available for resource subscribers (RS) using multiple SCIM interactions, an example of this role could be an Identity-as-a-Service (IDaaS) cloud platform.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes information in resource objects (RO) and typically don't create new objects or attributes. An example of entities that play this role include SaaS applications relying on an IDaaS cloud platform.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about resources and its attributes, but does not participate in SCIM flows, examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RO) Resource| |(RA) Resource|   |(RO) Resource| |(RA) Resource|
   |   Object1   | |  Attribute1 |   |   Object2   | |  Attribute2 |
   +-------------+ +-------------+   +-------------+ +-------------+
          |               |                 |               |
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RC) Resource| |(RU) Resource|   |(RC) Resource| |(RU) Resource|
   |  Creators   | |  Updaters   |   |  Creators   | |  Updaters   |
   +-------------+ +-------------+   +-------------+ +-------------+
       |               |                 |                |
       +--------+------+-----------------+-------+--------+
                |                                |
                v                                v
       +----------------+              +----------------+
       | (RM) Resource  |              | (RM) Resource  |
       |     Manager    |              |     Manager    |
       +----------------+              +----------------+
                |                                |
       +----------------+              +----------------+
       |                |              |                |
       v                v              v                v
  +-------------+ +-------------+   +-------------+ +-------------+
  |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
  |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
  +-------------+ +-------------+   +-------------+ +-------------+
          |                                  |
    +----------------+                  +----------------+
    |                |                  |                |
    v                v                  v                v
 +-------------+ +-------------+   +-------------+ +-------------+
 |(RO) Resource| |(RO) Resource|   |(RO) Resource| |(RO) Resource|
 |   Object1   | |   Object2   |   |   Object1   | |   Object2   |
 +-------------+ +-------------+   +-------------+ +-------------+
                      Figure 1: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are actions or activities that may cause a SCIM action to occur.  Triggers can occur as a result of business processes like a corporate hiring event, but can also be scheduled events such as a unix bash script running as a chron job, or can be just-in-time events such as SAML assertion arriving at a federated relying party that identifies a not-seen-before user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers used to allow CRUD (Create, Read, Update, Delete) using SCIM Actions or Operations as it is designed to capture a class of use case that makes sense to the actor requesting it rather than to describe a protocol operation.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a configured-in-advance agreement where a SCIM client performs an action at a specific time. This trigger is often recurring, and in that case the combination of trigger and action together may be referred to as "polling" the SCIM server. An example of a periodic interval trigger could be a UNIX chron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event occuring such as a specific entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. A SCIM action could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to [draft-ietf-scim-events]; for example an application acting as a resource subscriber and SCIM client could receive a SCIM event denoting creation of a new user object, triggering a SCIM action to fetch all the attributes for that user.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server.</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-on)</name>
<t>Single Sign-on triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
          Figure 2:  SCIM  Flow and Entities map
]]></artwork></figure>

<t><list style="numbers">
  <t>SSO trigger that creates the user and might create some RA (Resource Attributes) of a RO (Resource Object)</t>
  <t>SCIM actions that will complement the attributes created before with an SSO JIT with additional RA (Resource Attributes) of the RO (Resource Objects) created before. <br />
This use case combines the SCIM protocol with other protocols used for Single Sign-On, specially in the use case of JIT (Just in time Provision), specially useful with protocols like SAML that is limit by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by corresponding those activities to HTTP verbs such as POST, PUT, GET, DELETE etc.  The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles and an SCIM entity can have multiple roles, depending on the objective of the use case that we are describing.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary resource creator/updater.</t>

<section anchor="resource-object-creationupdate-from-client-to-server"><name>Resource Object creation/update from Client to Server</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, that can also be called as SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                (1)                |                |
|                | --------------------------------> |                |
|                |                                   |                |
|                |                (2)                |      SCIM      |
|     Client     | <-------------------------------- |     Server     |
|   (typically   |                                   |  (typically a  |
|    an IdM)     |                (3)                |   Application) |
|                | --------------------------------> |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                (4)                |                |
|                | <-------------------------------- |                |
+----------------+                                   +----------------+
              Figure 3: SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>

<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client will map to the RM/RC/RU and the Server will map into RS.</t>

</section>
<section anchor="resource-object-creation-from-a-creation-entity"><name>Resource Object creation from a Creation Entity</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, can also be called as Service Provider in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>, in this model the Client is just responsible for a limit set of attributes and do not do any management overall, and the Resource management function resides on the Server.</t>

<figure><artwork><![CDATA[
+--------------+                                   +---------------+
|              |                (1)                |               |
|              | --------------------------------> |               |
|              |                                   |               |
|              |                (2)                |     SCIM      |
|    Client    | <-------------------------------- |    Server     |
| (typically   |                                   | (typically an |
|  an HR       |                (3)                |      IdM)     |
| Application) | --------------------------------> |               |   
|              |                                   |     RM/RS     |
|   RC/RU      |                (4)                |               |
|              | <-------------------------------- |               |
+--------------+                                   +---------------+
             Figure 4:  SCIM  Flow and Orchestrator roles maps
   
]]></artwork></figure>
<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client will map to the RC/RU and the Server will map into RM/RS. The SCIM client is sometimes called as the "HR Application", because it responsibilities are only on be the creator and updater of the RO and specific number of its RA, the client in this case has no responsibilities on the management of Resources, typically done by an IdM.</t>

</section>
<section anchor="resource-object-creation-from-a-creation-entity-and-consumption-from-an-application"><name>Resource Object creation from a Creation Entity and consumption from an Application</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, this Client is just responsible for a limit set of attributes and do not do any management overall the RO. This SCIM element that is going to manage the RO will then be the Client for other SCIM services that will consume the RO/RA, that might have more RA than the original RO provided by the originator of the RO.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |     (1)        |               |      (1)        |         |
|        | -------------> |               | --------------> |         |
| Client |                |SCIM Server    |                 |         |
|        |     (2)        |               |      (2)        |  SCIM   |
|        | <------------- |               | <-------------- | Server  |
|        |                |         Client|                 |         | 
|        |     (3)        |               |      (3)        |         |
|        | -------------> |               | --------------> |         |
|        |                |  RM/RS/RC/RU  |                 |         |
| RC/RU  |     (4)        |               |      (4)        |   RS    |
|        | <------------- |               | <-------------- |         |
+--------+                +---------------+                 +---------+
                     Figure 5:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>
<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client on the left will map to the RC/RU and the Server in the middle will map into RM/RS, the SCIM client on the left is also sometimes called as the "HR Application", because it responsibilities are only on be the creator and updater of the RO and specific number of its RA, the client in this case has no responsibilities in doing any management of the Resources, typically done by an IdM. <br />
The center component as describe is the Server for the client on the left, will act as the Client for the server on the right, which typically is an SaaS application that want to consume RO and its RA from an RM.</t>

</section>
<section anchor="resource-object-creation-from-a-creation-entity-and-consumption-from-an-application-when-different-resource-attributes-are-generated-in-different-entities"><name>Resource Object creation from a Creation Entity and consumption from an Application when different Resource Attributes are generated in different entities</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, this Client is just responsible for a limit set of attributes and do not do any management overall the RO. This SCIM element that is going to manage the RO will then be the Client for other SCIM services that will consume the RO/RA, that might have more RA than the original RO provided by the originator of the RO. 
Now the right SCIM element will have it own RA that needs to be updated in the RM (Resource Manager), that will also update the SCIM element on the left.</t>

<figure><artwork><![CDATA[
 +----------+               +---------------+                +--------+
 |          | -----(1)----> |               | -----(1)-----> |        |
 |  Client  | <----(2)----- |SCIM           | <----(2)------ |  SCIM  |
 |          | -----(3)----> |Server         | -----(3)-----> | Server |
 |          | <----(4)----- |         Client| <----(4)------ |        |
 |          |               |               |                |        |
 |          |               |               |                |        |
 | RC/RU/RS | <----(1)----- |  RM/RS/RC/RU  | <----(1)------ |   RS   |
 |          | -----(2)----> |Client         | -----(2)-----> |        |
 |   SCIM   | <----(3)----- |           SCIM| <----(3)------ | Client |
 |  Server  | -----(4)----> |         Server| -----(4)-----> |        |
 +----------+               +---------------+                +--------+
                 Figure 6:  SCIM  Flow and Orchestrator roles maps
   
]]></artwork></figure>
<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client on the left will map to the RC/RU and the Server in the middle will map into RM/RS, the SCIM client on the left is also sometimes called as the "HR Application", because it responsibilities are only on be the creator and updater of the RO and specific number of its RA, the client in this case has no responsibilities in doing any management of the Resources, typically done by an IdM. <br />
The center component as describe is the Server for the client on the left, will act as the Client for the server on the right, which typically is an SaaS application that want to consume RO and its RA from an RM.
In addition to the models seen before now the "HR Application" also subscribe to RA that are created by the RS and reported by the RM, the Application will be the creator of specific attributes.<br />
So we will see that the 3 SCIM elements will be RC/RU/RS for each RO/RA.</t>

</section>
</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to ask for data from a SCIM Server. A client active pull can be used to fetch one object, a subset of objects, or all objects from a SCIM server. In cases where the client is a resource updater, it may perform an active pull of an object or objects in order to determine whether an active push of new data is necessary. Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, but where there isn't any need to track individual RO/RA. 
Another example of a client active pull would be a client that needs to have details of a specific device that was onboarded by a mobile application and that need to provide the RO/RA information on the behalf of the device.</t>

<section anchor="resource-object-creation-or-update"><name>Resource Object Creation or Update</name>
<t>In this model we will have a Client that is going to pull information about a RO/RA from a Server. In this model the Client is going to management all the RO (Resource Objects) and its RA (Resource Attributes), that are provided by the Server, and the RM (Resource Management) function resides on the Client.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Client  | --------------------------------> |  Server  |
|          |                                   |          |
|          |                (2)                |          |
|          | <-------------------------------- |          |   
|  RS/RM   |                                   |   RC/RU  |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
        Figure 7:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>

<t><list style="numbers">
  <t>The SCIM client will do an HTTP GET to obtain the RO/RA that will be available in the Server.</t>
  <t>The SCIM Server will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>A typical example of this use case is a device that is going to use a mobile application or browser base to enroll devices and gathers its attributes, that mobile application or browser after enrollment process is finish will do a trigger to notify the client that is ready to provide the RO/RA of the device. It is the SCIM client that will do al the Resource management for all the devices. <br />
Another example could be a SCIM client that has the role of an IDM that is not the owner of a specific RA  and gets it from the Server, for this kind of scenarios the SCIM server would need to create an change database for the attributes that are own by the server</t>

</section>
<section anchor="resources-subscription"><name>Resources Subscription</name>
<t>In this model we will have the Client that is going to pull information about a RO/RA from the Server. In this model, the Client has is no status/change database, and it gets a list of all the RO/RA based on filters provided by the client, so there will be a full update every synchronization cycle.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 8:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>

<t><list style="numbers">
  <t>The SCIM client will do an HTTP GET to obtain the selected list of RO (Resource Object) and its RA (Resource Attributes).</t>
  <t>The SCIM Service Provider will return the RO and its RA with additional metadata information to allow for audit.</t>
</list></t>

<t>A good example would be SaaS service that needs to consume a list of contacts or devices, this SaaS service will need to know the relevant RO/RA, this operation will happen periodically and every time will get a full list of all the RO (Resource Objects).</t>

</section>
<section anchor="resource-object-creation-or-update-and-subscription"><name>Resource Object Creation or Update and Subscription</name>
<t>In this model we will bring together both of the two previous SCIM actions for pull information, where a typically a device can be the creator or their own attributes and will allow an SaaS service to subscribe to all the different RO/RA and deliver additional services for itself and other devices. It isn't expected from any of the SCIM clients in the Active pull model to create any status database of attributes changes, so the clients will always do a pull on one or many RO (Resource Objects) based on triggers.</t>

<figure><artwork><![CDATA[
+----------+                 +---------------+               +--------+
|          |                 |               |               |        |
|          |                 |               |               |        |
|          |                 |               |               |        |
|  SCIM    |       (1)       |Client         |      (3)      |        |
| Server   | <-------------- |           SCIM| <------------ | Client |
|          |                 |         Server|               |        | 
|          |       (2)       |               |      (4)      |        |
|          | --------------> |               | ------------> |        |
|          |                 |  RM/RS/RC/RU  |               |        |
|   RC/RU  |                 |               |               |   RS   |
|          |                 |               |               |        |
+----------+                 +---------------+               +--------+
                    Figure 9:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>
<t><list style="numbers">
  <t>The SCIM client will do an HTTP GET to obtain the RO/RA that will be available in the Server.</t>
  <t>The SCIM Server will return the RO/RA with additional metadata information to allow for audit.</t>
  <t>The SCIM client will do an HTTP GET to obtain the selected list of RO (Resource Object) and its RA (Resource Attributes).</t>
  <t>The SCIM Service Provider will return the RO and its RA with additional metadata information to allow for audit.</t>
</list></t>

<t>A typical example of this use case is a device that is going to use a mobile application or browser base to enroll devices and gathers its attributes, that mobile application or browser after enrollment process is finish will do a trigger to notify the client that is ready to provide the RO/RA of the device. It is the SCIM client that will do all the Resource management for all the devices.<br />
This SCIM element in the center will also provide list list of contacts or devices, that can be consume by different SCIM entities, this operation will happen when a specific trigger will be execute by the client on the right, to get a list RO (Resource Objects) and RA (Resource Attributes) that will be defined by the filter on the client in the right.</t>

</section>
</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why and how we find them in the cross-domain environment. The ultimate goal is guidance for developers working on common models, explaining challenges and components.
Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to allow from simple to complex architectures for cross domain resource management. Orchestrators roles are mapped to the use cases to simplify the task of explaining the multiple functions of the SCIM elements. Use cases build on each other, starting with simple cases, and ending with the most complex ones.</t>

<section anchor="self-referential-resource-updates-via-me"><name>Self-Referential Resource Updates via /me</name>
<t>Get information about persona /me endpoint.<br />
A use case cover in <xref target="RFC7644"></xref> where a SCIM client can do CRUD operation on the entity of the user, in this use case the SCIM client that is the RM (Resource Manager), RC (Resource Creator) and RU (Resource Updater), will be able to read, create, update the RO (Resource Object) and its RA (Resource Attributes) in the RS (Resource Subscriber). the RS will provide an /me URI to achieve this.<br />
Special considerations exist from authorization perspective; unlike other listed CRUD use cases, the authorization for this use case only allows access to the RO (Resource Object) of the resource owner.</t>

</section>
<section anchor="simple-resource-update"><name>Simple Resource Update</name>
<t>Single RM/RC/RU and multiple RS.<br />
This is a very common and simple SCIM use case, we have the IdM/Device Managers/etc. do all CRUD operation with the resources, then after the trigger mechanisms the resources information RO/RA reach the RS (Resource Subscribers), also know as the SaaS Application.<br />
The RS (Resource Subscriber) will take the decision on which RA (Resource Attributes) to consider and how the RO (Resource Object) will show in its resource database.<br />
Typically we will find this kind of use case in small to mid size organization, where there is no structure method to handle the resources and typically in Organization that start with a blank sheet of paper in a greenfield deployment.</t>

</section>
<section anchor="resource-updates-originating-at-a-non-scim-source"><name>Resource Updates Originating at a Non-SCIM Source</name>
<t>One or more ERC with single RM/RC/RU and multiple RS.<br />
This is another common use case, because it allow the organization to adopt SCIM protocol for CRUD operations of their resources. In this use case the organization already have an existent database of resources that is going to be the source of truth for the Resource Manager. <br />
Normally this ERC, specially if we are talking about user Identity, will have a User database that can be accessible using LDAP, some times the ERC can provide RO/RA using SAML Single Sign-On using Just in time Provision. We also see some IDaaS providing softwares that allow them to exchange resource information by using proprietary protocols, very common using HTTP REST to get the information from the ERC to the RM.<br />
Typically in this use case the RM will become the new source of truth for the resources of our Organization, will add extra RA (Resource Attributes) and ignore other RA that existed in the ERC.<br />
Some organization that already realize that going forward in the SCIM path, the RM will manage the RO/RA, will also start create new RO in the RM.<br />
The Resource Subscribers will consume all or a subset of the RO/RA from the RM.<br />
Typically we will see this use case in small to mid size organization where resources were organized in a non standardize platform for Resources Management, where it isn't possible to cut/replace everything with a new system.</t>

</section>
<section anchor="resources-from-multiple-scim-sources-coordinated-by-a-resource-manager"><name>Resources from Multiple SCIM Sources Coordinated by a Resource Manager</name>
<t>One or more RC/RU, with single RM/RC/RU/RS and multiple RS.<br />
In this use case, the the CRUD operation for the RO (Resource Object) and its RA (Resource Attributes) does not belong to the RM (Resource Manager), this is done in a separate SCIM entity, the Resource Creator/Resource Updater. <br />
A good example of this is use case are Organization that have their HR application, and the lifecycle of the resource (typically groups and Users) is done by that application.<br />
We could also have devices where the creation and update operations are always done by the device  itself or by a mobile application/web server on their behalf, in this use case the roles of RC/RU moves away from the RM.
We could also have this use case where the RM is extended with the Roles of RC/RU for extra RA (Resources Attributes), but the RO (Resource Object) is typically created by the "HR System"/device. <br />
Typically we will see this use case in mid to large organization where no structure method to handle the resources start with a blank sheet of paper in a  greenfield deployment.</t>

</section>
<section anchor="resources-from-scim-and-non-scim-sources-coordinated-by-a-resource-manager"><name>Resources from SCIM and Non-SCIM sources, Coordinated by a Resource Manager</name>
<t>One or more ERC, one or more RC/RU, with single RM/RC/RU/RS and multiple RS.<br />
In this use case, one source of the Resource information is an ERC (External Resource Creator), or the entity that has the role of RC/RU (such as an HR System). In some cases the HR system can also consume information from the ERC and complement it. 
This doesn't mean that the RM will not need to consolidate RO/RA from the SCIM and non SCIM entities and consolidate and aggregate RO/RAs for those multiple sources. The RM gets its RO (Resource Object) from both systems the RC/RU and from the ERC, and need to define rules which ones to take and to ignore.</t>

</section>
<section anchor="complex-sources-including-multiple-resource-updaters"><name>Complex sources including Multiple Resource Updaters</name>
<t>One or more ERC, one or more RC/RU, with single RM/RC/RU/RS and multiple RS/RU.<br />
In this use case we add the capability of the Resource Subscriber to be also an Resource Update, it is very common that an SaaS application can be the source of truth for specifics RA and add extra details to the RO.<br />
Typically we will see this use case in large organization where resources were organized in a non standardize platform for Resources Management and it isn't possible to cut/replace everything with a new system. Those organization start to adopt many application that brings new attributes to the different resources that already exist in the system.</t>

</section>
<section anchor="complex-multi-directional-object-and-resource-management-with-simple-resource-subscribers"><name>Complex Multi-directional Object and Resource Management with simple Resource Subscribers</name>
<t>One or more ERC, one or more RC/RU/RS, with single RM/RC/RU/RS and multiple RS/RU.<br />
In this use case we introduce the possibility of the RC/RU (example given before the HR System) be interested in the attribute that was created updated by the RS/RU (also known as the SaaS application), an example could be adding the business email that was created by the mail service (that came from RS/RU) to the HR information service (the RC/RU/RS element).<br />
Typically we will see this use case in large organization where resources were organized in a non standardize platform for Resources Management and it isn't possible to cut/replace everything with a new system. Those organization start to adopt many application that brings attributes to the different resources that already exist in the system, but they need to have all the important attributes of Resources in a application in our examples "HR application".</t>

</section>
<section anchor="complex-multi-direction-objectresource-management-with-bi-directional-resource-subscriberupdaters"><name>Complex Multi-direction Object/Resource Management with bi-directional Resource Subscriber/Updaters</name>
<t>One or more ERC, one or more RC/RU/RS, with one or more RM/RC/RU/RS and multiple RS/RU.<br />
In this use case we introduce the possibility of having multiple Resource Managers, where the information from the RO/RA is consolidated across different domains/services.<br />
Typically we will see this use case in large organizations, or between organizations that have their own business to business communication and have the need to exchange information about Resources. This example also happens during mergers or acquisitions, where multiple RMs exist and IT departments have to manage each RM in parallel.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be guaranteed for the SCIM operations to ensure that only authenticated entities can perform the SCIM requests and the requested SCIM operations are authorized. 
SCIM resources (e.g., Users and Groups) can contain sensitive information.  Thus, data confidentiality MUST be guaranteed at the transport layer.
There can be privacy issues that go beyond transport security, e.g., moving personally identifying information (PII) offshore between different SCIM elements.
Regulatory requirements shall be met when migrating identity information between jurisdictional regions (e.g., countries and states may have differing regulations on privacy).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used in place of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>

<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>

<reference anchor="RFC7642">
  <front>
    <title>System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>
    <author fullname="K. LI" initials="K." role="editor" surname="LI"/>
    <author fullname="P. Hunt" initials="P." surname="Hunt"/>
    <author fullname="B. Khasnabish" initials="B." surname="Khasnabish"/>
    <author fullname="A. Nadalin" initials="A." surname="Nadalin"/>
    <author fullname="Z. Zeltsan" initials="Z." surname="Zeltsan"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>This document provides definitions and an overview of the System for Cross-domain Identity Management (SCIM). It lays out the system's concepts, models, and flows, and it includes user scenarios, use cases, and requirements.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7642"/>
  <seriesInfo name="DOI" value="10.17487/RFC7642"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>

<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>


<reference anchor="Device Schema Extensions to the SCIM model" target="https://datatracker.ietf.org/doc/draft-shahzad-scim-device-model">
  <front>
    <title>Device Schema Extensions to the SCIM model</title>
    <author initials="M." surname="Shahzad" fullname="M. Shahzad">
      <organization></organization>
    </author>
    <author initials="H." surname="Iqbal" fullname="H. Iqbal">
      <organization></organization>
    </author>
    <author initials="E." surname="Lear" fullname="E. Lear">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>
<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>Device Schema Extensions to the SCIM model</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>


    </references>


<?line 494?>



  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+196W4jR5rgfwF6h4AMTElrkqpS1Y7HmkZjZEnVlqdU0pIS
vINGYZBMBsm0kpnsjKRkNgqNfo0Fdl+un2S/K67MpC7L7TlKgF1SZmQc331F
RL/f394ydVJM/j3Jy0Ifqrpa6e2tSZkWyQL+nFTJtO6nZVXpLOmbNFusjE4T
o03/9ZvtrWxZ0SemPnj9+tvXB9DZarzIjMnKol4voYOz06v321s3en1XVpND
9cezotZVoev+CfbcU6Pjs/NP21vw9mZWlavlIT3Z3treSpP6UGXFtNzeqrM6
h75ejdam1gs1LSt1XJXG9CflIskKdTbRBbRZq/OkSGZ6AX8dqhM9zYqshpmY
nrq41dVtpu966rgsUr2s4RmsWg31n1ZZRV+YV9tbyXhc6VscCSahro1Wx7hW
ePMhKWaHShfQZlXPy+pwe6uvGEaXySov1Q9lNYPmDKntLaXg70N1nJm0VDxv
g081TDg/VMtkRUD9lxQbDNJygUv2PS50nqiTrJjl2vV1nqWw6HJa4yjLskpw
bUGfr5b02WBCn/3LwjbH3l9h90VZLeCjW32IXw3fHx+8efPtIb5BMDfeffOP
794Gv78Lfj+wv3/75s3r4Hf3/J/evfmGfj/Rt1mq1SidwxzV6c+1LpA0jKpL
Vc814VotyonOqTn81AmAEbA3r+ulOdzfnyR1UldJeqOrQabr6QBAsQ/kuc+U
aebJ/M/JhCizP6HR+tSf7Y4p5/HzkO8ckukvi5fzgRrxgI0X3w/U2Z/GSd54
fDpQH3RSyVNYCjw7eH3wtv/6G4UPadjLqpxmuSaqHul0VSEhn94CRaqr8gYm
+kzQ4COGi8bOzK8CkcuB+n5V1I2nHwfAN4v+j0CIuvkOYPivmdGbgAJM0O+r
ZGxwZTX+fTXPjIJlrZBJ1bIqb7OJhiche5fC3sTTRuc6rfVEgahSJKtUOeVF
PV5+qF2EwN5AqbNa5cka+ljV1ImhTl4ZlTpJQnASiTLNyzv5NatBfqX5Cqfr
5iKvFsucxiEmxq4MrIpZ2gwsGBbZZIICYHvrKwWCsyonq5SZ/upZq1HTZJHl
awSHWeo0m2Ypj6j+KBz/iWYnf737pBD02mSzAsAJlLGgHlWlTbmqUl4WLKYg
wCwRY0hU0H1m57Dwc6jnSa0KzT2NARzlYrEqcArwKEFhZaArVg+K12IEoRUS
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
P1RSto+QsQAA

-->

</rfc>

