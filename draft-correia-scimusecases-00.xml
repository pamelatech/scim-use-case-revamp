<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.36 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-correia-scimusecases-01" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2023" month="August" day="04"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 49?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 53?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model additional resource definition). The specifications have two primary goals: 1) A common representation of a resource object and its attributes, and 2) Standardized patterns for how those resources can be operated on, including "CRUD" operations that create, read, update or delete resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc. These goals are codified as a data model in <xref target="RFC7643"></xref> defining resources, attributes and default schema, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overview, concepts, flows, and use cases implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike the practice of some protocols like Application Bridging for Federated Access Beyond web (ABFAB) and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes movement of data only between two parties in a HTTP client-server model, implementation patterns are discussed in this document that use concepts beyond the core schema and protocol, but that are needed to understand how SCIM actions can fit into greater architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:</t>

<t><list style="symbols">
  <t>CRUD: Create, Read, Update, Delete</t>
  <t>RC: Resource Creator</t>
  <t>RU: Resource Updater</t>
  <t>RM: Resource Manager</t>
  <t>RS: Resource Subscriber</t>
  <t>RO: Resource Object</t>
  <t>RA: Resource Attribute</t>
  <t>ERC: External Resource Creator</t>
  <t>IaaS: Infrastructure as a Service</t>
  <t>JIT: Just In Time</t>
  <t>PaaS: Platform as a Service</t>
  <t>SaaS: Software as a Service</t>
  <t>IDaaS: Identity as a Service</t>
  <t>IdM: Identity Manager</t>
  <t>SAML: Security Assertion Markup Language</t>
  <t>SCIM: System for Cross-domain Identity Management</t>
  <t>SSO: Single Sign-On</t>
</list></t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>SCIM architecture is a client-server model centered on a normative concept of a "resource". Resources have types (such as a user or a group) and each unique instance of a resource type is represented by a JSON object, actively accessed via a standardized REST API.  Each resource object can be managed individually or managed in bulk using actions that by default are specified in <xref target="RFC9110"></xref> (HTTP GET, PUT, POST etc), but that may expand to concepts in extension documents, for example security event tokens (SETs). This model therefore enables organizations to represent information about user populations and the groups that these user populations are part of using the core specifications and to extend to other important resources using extension drafts in the same family with the high level concepts of performing SCIM actions on resource objects. SCIM actions result in resource object and associated data "moving" between the client and server, as clients actively push and pull information that reflects change over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
+---------+                       +--------+
|  SCIM   |                       |        | 
| Server  |                       |  SCIM  | 
|         | <--- SCIM Action ---> | Client |
| /Users  |                       |        |
| /Groups |                       |        |
+---------+                       +--------+
]]></artwork></figure>

<t>The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models.<br />
The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing a common schemas and extension model, as well as binding documents to provide patterns for exchanging this schema using standard protocols. In essence, make it fast, cheap, and easy to move resources in to, out of, and around the applications.<br />
The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases we need to understand 4 different concepts of the protocol, that will describe underlying protocol, the different orchestrators roles, how we start the SCIM interaction and what methods we have to execute the actions.</t>

<section anchor="data-model"><name>Data Model</name>
<t>SCIM defines two types of data entities: resources and attributes.</t>

<section anchor="resource-object-ro"><name>Resource Object (RO)</name>
<t>A JSON object representing a user, group (or extension object) to be manipulated through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be acted on via the endpoints and parameters defined in <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="resource-attribute-ra"><name>Resource Attribute (RA)</name>
<t>A named element of a Resource Object. Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary etc) and characteristics (required, unique etc).</t>

</section>
</section>
<section anchor="http-client-server-roles"><name>HTTP Client-Server Roles</name>
<t>HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol.<br />
A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API Security, managing client identifiers &amp; keys as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider.  The client initiates SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows.
An entity can have one or more orchestrators roles, depending on the overall provisioning architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the Resource Object (RO). Typically we can see this role in HR or resource management applications that are responsible for creating resources and some of its attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific attributes of a Resource Object (RO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage a specific Resource Attribute (RA).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms resource objects from resource creators/updaters (RC/RU) and make them available for resource subscribers (RS) using multiple SCIM interactions, an example of this role could be an Identity-as-a-Service (IDaaS) cloud platform.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes information in resource objects (RO) and typically don't create new objects or attributes. An example of entities that play this role include SaaS applications relying on an IDaaS cloud platform.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about resources and its attributes, but does not participate in SCIM flows, examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RO) Resource| |(RA) Resource|   |(RO) Resource| |(RA) Resource|
   |   Object1   | |  Attribute1 |   |   Object2   | |  Attribute2 |
   +-------------+ +-------------+   +-------------+ +-------------+
          |               |                 |               |
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RC) Resource| |(RU) Resource|   |(RC) Resource| |(RU) Resource|
   |  Creators   | |  Updaters   |   |  Creators   | |  Updaters   |
   +-------------+ +-------------+   +-------------+ +-------------+
       |               |                 |                |
       +--------+------+-----------------+-------+--------+
                |                                |
                v                                v
       +----------------+              +----------------+
       | (RM) Resource  |              | (RM) Resource  |
       |     Manager    |              |     Manager    |
       +----------------+              +----------------+
                |                                |
       +----------------+              +----------------+
       |                |              |                |
       v                v              v                v
  +-------------+ +-------------+   +-------------+ +-------------+
  |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
  |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
  +-------------+ +-------------+   +-------------+ +-------------+
          |                                  |
    +----------------+                  +----------------+
    |                |                  |                |
    v                v                  v                v
 +-------------+ +-------------+   +-------------+ +-------------+
 |(RO) Resource| |(RO) Resource|   |(RO) Resource| |(RO) Resource|
 |   Object1   | |   Object2   |   |   Object1   | |   Object2   |
 +-------------+ +-------------+   +-------------+ +-------------+
                      Figure 1: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are actions or activities that may cause a SCIM action to occur.  Triggers can occur as a result of business processes like a corporate hiring event, but can also be scheduled events such as a unix bash script running as a chron job, or can be just-in-time events such as SAML assertion arriving at a federated relying party that identifies a not-seen-before user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers used to allow CRUD (Create, Read, Update, Delete) using SCIM Actions or Operations as it is designed to capture a class of use case that makes sense to the actor requesting it rather than to describe a protocol operation.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a configured-in-advance agreement where a SCIM client performs an action at a specific time. This trigger is often recurring, and in that case the combination of trigger and action together may be referred to as "polling" the SCIM server. An example of a periodic interval trigger could be a UNIX chron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event occuring such as a specific entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. A SCIM action could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to [draft-ietf-scim-events]; for example an application acting as a resource subscriber and SCIM client could receive a SCIM event denoting creation of a new user object, triggering a SCIM action to fetch all the attributes for that user.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server.</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-on)</name>
<t>Single Sign-on triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
          Figure 2:  SCIM  Flow and Entities map
]]></artwork></figure>

<t><list style="numbers">
  <t>SSO trigger that creates the user and might create some RA (Resource Attributes) of a RO (Resource Object)</t>
  <t>SCIM actions that will complement the attributes created before with an SSO JIT with additional RA (Resource Attributes) of the RO (Resource Objects) created before. <br />
This use case combines the SCIM protocol with other protocols used for Single Sign-On, specially in the use case of JIT (Just in time Provision), specially useful with protocols like SAML that is limit by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by corresponding those activities to HTTP verbs such as POST, PUT, GET, DELETE etc.  The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles and an SCIM entity can have multiple roles, depending on the objective of the use case that we are describing.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary resource creator/updater.</t>

<section anchor="resource-object-creationupdate-from-client-to-server"><name>Resource Object creation/update from Client to Server</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, that can also be called as SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                (1)                |                |
|                | --------------------------------> |                |
|                |                                   |                |
|                |                (2)                |      SCIM      |
|     Client     | <-------------------------------- |     Server     |
|   (typically   |                                   |  (typically a  |
|    an IdM)     |                (3)                |   Application) |
|                | --------------------------------> |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                (4)                |                |
|                | <-------------------------------- |                |
+----------------+                                   +----------------+
              Figure 3: SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>

<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client will map to the RM/RC/RU and the Server will map into RS.</t>

</section>
<section anchor="resource-object-creation-from-a-creation-entity"><name>Resource Object creation from a Creation Entity</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, can also be called as Service Provider in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>, in this model the Client is just responsible for a limit set of attributes and do not do any management overall, and the Resource management function resides on the Server.</t>

<figure><artwork><![CDATA[
+--------------+                                   +---------------+
|              |                (1)                |               |
|              | --------------------------------> |               |
|              |                                   |               |
|              |                (2)                |     SCIM      |
|    Client    | <-------------------------------- |    Server     |
| (typically   |                                   | (typically an |
|  an HR       |                (3)                |      IdM)     |
| Application) | --------------------------------> |               |   
|              |                                   |     RM/RS     |
|   RC/RU      |                (4)                |               |
|              | <-------------------------------- |               |
+--------------+                                   +---------------+
             Figure 4:  SCIM  Flow and Orchestrator roles maps
   
]]></artwork></figure>
<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client will map to the RC/RU and the Server will map into RM/RS. The SCIM client is sometimes called as the "HR Application", because it responsibilities are only on be the creator and updater of the RO and specific number of its RA, the client in this case has no responsibilities on the management of Resources, typically done by an IdM.</t>

</section>
<section anchor="resource-object-creation-from-a-creation-entity-and-consumption-from-an-application"><name>Resource Object creation from a Creation Entity and consumption from an Application</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, this Client is just responsible for a limit set of attributes and do not do any management overall the RO. This SCIM element that is going to manage the RO will then be the Client for other SCIM services that will consume the RO/RA, that might have more RA than the original RO provided by the originator of the RO.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |     (1)        |               |      (1)        |         |
|        | -------------> |               | --------------> |         |
| Client |                |SCIM Server    |                 |         |
|        |     (2)        |               |      (2)        |  SCIM   |
|        | <------------- |               | <-------------- | Server  |
|        |                |         Client|                 |         | 
|        |     (3)        |               |      (3)        |         |
|        | -------------> |               | --------------> |         |
|        |                |  RM/RS/RC/RU  |                 |         |
| RC/RU  |     (4)        |               |      (4)        |   RS    |
|        | <------------- |               | <-------------- |         |
+--------+                +---------------+                 +---------+
                     Figure 5:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>
<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client on the left will map to the RC/RU and the Server in the middle will map into RM/RS, the SCIM client on the left is also sometimes called as the "HR Application", because it responsibilities are only on be the creator and updater of the RO and specific number of its RA, the client in this case has no responsibilities in doing any management of the Resources, typically done by an IdM. <br />
The center component as describe is the Server for the client on the left, will act as the Client for the server on the right, which typically is an SaaS application that want to consume RO and its RA from an RM.</t>

</section>
<section anchor="resource-object-creation-from-a-creation-entity-and-consumption-from-an-application-when-different-resource-attributes-are-generated-in-different-entities"><name>Resource Object creation from a Creation Entity and consumption from an Application when different Resource Attributes are generated in different entities</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, this Client is just responsible for a limit set of attributes and do not do any management overall the RO. This SCIM element that is going to manage the RO will then be the Client for other SCIM services that will consume the RO/RA, that might have more RA than the original RO provided by the originator of the RO. 
Now the right SCIM element will have it own RA that needs to be updated in the RM (Resource Manager), that will also update the SCIM element on the left.</t>

<figure><artwork><![CDATA[
 +----------+               +---------------+                +--------+
 |          | -----(1)----> |               | -----(1)-----> |        |
 |  Client  | <----(2)----- |SCIM           | <----(2)------ |  SCIM  |
 |          | -----(3)----> |Server         | -----(3)-----> | Server |
 |          | <----(4)----- |         Client| <----(4)------ |        |
 |          |               |               |                |        |
 |          |               |               |                |        |
 | RC/RU/RS | <----(1)----- |  RM/RS/RC/RU  | <----(1)------ |   RS   |
 |          | -----(2)----> |Client         | -----(2)-----> |        |
 |   SCIM   | <----(3)----- |           SCIM| <----(3)------ | Client |
 |  Server  | -----(4)----> |         Server| -----(4)-----> |        |
 +----------+               +---------------+                +--------+
                 Figure 6:  SCIM  Flow and Orchestrator roles maps
   
]]></artwork></figure>
<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client on the left will map to the RC/RU and the Server in the middle will map into RM/RS, the SCIM client on the left is also sometimes called as the "HR Application", because it responsibilities are only on be the creator and updater of the RO and specific number of its RA, the client in this case has no responsibilities in doing any management of the Resources, typically done by an IdM. <br />
The center component as describe is the Server for the client on the left, will act as the Client for the server on the right, which typically is an SaaS application that want to consume RO and its RA from an RM.
In addition to the models seen before now the "HR Application" also subscribe to RA that are created by the RS and reported by the RM, the Application will be the creator of specific attributes.<br />
So we will see that the 3 SCIM elements will be RC/RU/RS for each RO/RA.</t>

</section>
</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to ask for data from a SCIM Server. A client active pull can be used to fetch one object, a subset of objects, or all objects from a SCIM server. In cases where the client is a resource updater, it may perform an active pull of an object or objects in order to determine whether an active push of new data is necessary. Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, but where there isn't any need to track individual RO/RA. 
Another example of a client active pull would be a client that needs to have details of a specific device that was onboarded by a mobile application and that need to provide the RO/RA information on the behalf of the device.</t>

<section anchor="resource-object-creation-or-update"><name>Resource Object Creation or Update</name>
<t>In this model we will have a Client that is going to pull information about a RO/RA from a Server. In this model the Client is going to management all the RO (Resource Objects) and its RA (Resource Attributes), that are provided by the Server, and the RM (Resource Management) function resides on the Client.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|          |                (1)                |   SCIM   |
|  Client  | --------------------------------> |  Server  |
|          |                                   |          |
|          |                (2)                |          |
|          | <-------------------------------- |          |   
|  RS/RM   |                                   |   RC/RU  |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
        Figure 7:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>

<t><list style="numbers">
  <t>The SCIM client will do an HTTP GET to obtain the RO/RA that will be available in the Server.</t>
  <t>The SCIM Server will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>A typical example of this use case is a device that is going to use a mobile application or browser base to enroll devices and gathers its attributes, that mobile application or browser after enrollment process is finish will do a trigger to notify the client that is ready to provide the RO/RA of the device. It is the SCIM client that will do al the Resource management for all the devices.</t>

</section>
<section anchor="resources-subscription"><name>Resources Subscription</name>
<t>In this model we will have the Client that is going to pull information about a RO/RA from the Server. In this model in the Client there is no status/change database, and it gets a list of all the RO/RA based on filters provided by the client, so there will be a full update every synchronization cycle.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 8:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>

<t><list style="numbers">
  <t>The SCIM client will do an HTTP GET to obtain the selected list of RO (Resource Object) and its RA (Resource Attributes).</t>
  <t>The SCIM Service Provider will return the RO and its RA with additional metadata information to allow for audit.</t>
</list></t>

<t>A good example would be SaaS service that needs to consume a list of contacts or devices, this SaaS service will need to know the relevant RO/RA, this operation will happen periodically and every time will get a full list of all the RO (Resource Objects).</t>

</section>
<section anchor="resource-object-creation-or-update-and-subscription"><name>Resource Object Creation or Update and Subscription</name>
<t>In this model we will bring together both of the two previous SCIM actions for pull information, where a typically a device can be the creator or their own attributes and will allow an SaaS service to subscribe to all the different RO/RA and deliver additional services for itself and other devices. It isn't expected from any of the SCIM clients in the Active pull model to create any status database of attributes changes, so the clients will always do a pull on one or many RO (Resource Objects) based on triggers.</t>

<figure><artwork><![CDATA[
+----------+                 +---------------+               +--------+
|          |                 |               |               |        |
|          |                 |               |               |        |
|          |                 |               |               |        |
|  SCIM    |       (1)       |Client         |      (3)      |        |
| Server   | <-------------- |           SCIM| <------------ | Client |
|          |                 |         Server|               |        | 
|          |       (2)       |               |      (4)      |        |
|          | --------------> |               | ------------> |        |
|          |                 |  RM/RS/RC/RU  |               |        |
|   RC/RU  |                 |               |               |   RS   |
|          |                 |               |               |        |
+----------+                 +---------------+               +--------+
                    Figure 9:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>
<t><list style="numbers">
  <t>The SCIM client will do an HTTP GET to obtain the RO/RA that will be available in the Server.</t>
  <t>The SCIM Server will return the RO/RA with additional metadata information to allow for audit.</t>
  <t>The SCIM client will do an HTTP GET to obtain the selected list of RO (Resource Object) and its RA (Resource Attributes).</t>
  <t>The SCIM Service Provider will return the RO and its RA with additional metadata information to allow for audit.</t>
</list></t>

<t>A typical example of this use case is a device that is going to use a mobile application or browser base to enroll devices and gathers its attributes, that mobile application or browser after enrollment process is finish will do a trigger to notify the client that is ready to provide the RO/RA of the device. It is the SCIM client that will do all the Resource management for all the devices.<br />
This SCIM element in the center will also provide list list of contacts or devices, that can be consume by different SCIM entities, this operation will happen when a specific trigger will be execute by the client on the right, to get a list RO (Resource Objects) and RA (Resource Attributes) that will be defined by the filter on the client in the right.</t>

</section>
</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why and how we find them in the cross-domain environment. The ultimate goal is guidance for developers working on common models, explaining challenges and components.
Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to allow from simple to complex architectures for cross domain resource management. Orchestrators roles are mapped to the use cases to simplify the task of explaining the multiple functions of the SCIM elements. Use cases build on each other, starting with simple cases, and ending with the most complex ones.</t>

<section anchor="self-referential-resource-updates-via-me"><name>Self-Referential Resource Updates via /me</name>
<t>Get information about persona /me endpoint.<br />
A use case cover in <xref target="RFC7644"></xref> where a SCIM client can do CRUD operation on the entity of the user, in this use case the SCIM client that is the RM (Resource Manager), RC (Resource Creator) and RU (Resource Updater), will be able to read, create, update the RO (Resource Object) and its RA (Resource Attributes) in the RS (Resource Subscriber). the RS will provide an /me URI to achieve this.<br />
Special considerations exist from authorization perspective; unlike other listed CRUD use cases, the authorization for this use case only allows access to the RO (Resource Object) of the resource owner.</t>

</section>
<section anchor="simple-resource-update"><name>Simple Resource Update</name>
<t>Single RM/RC/RU and multiple RS.<br />
This is a very common and simple SCIM use case, we have the IdM/Device Managers/etc. do all CRUD operation with the resources, then after the trigger mechanisms the resources information RO/RA reach the RS (Resource Subscribers), also know as the SaaS Application.<br />
The RS (Resource Subscriber) will take the decision on which RA (Resource Attributes) to consider and how the RO (Resource Object) will show in its resource database.<br />
Typically we will find this kind of use case in small to mid size organization, where there is no structure method to handle the resources and typically in Organization that start with a blank sheet of paper in a greenfield deployment.</t>

</section>
<section anchor="resource-updates-originating-at-a-non-scim-source"><name>Resource Updates Originating at a Non-SCIM Source</name>
<t>One or more ERC with single RM/RC/RU and multiple RS.<br />
This is another common use case, because it allow the organization to adopt SCIM protocol for CRUD operations of their resources. In this use case the organization already have an existent database of resources that is going to be the source of truth for the Resource Manager. <br />
Normally this ERC, specially if we are talking about user Identity, will have a User database that can be accessible using LDAP, some times the ERC can provide RO/RA using SAML Single Sign-On using Just in time Provision. We also see some IDaaS providing softwares that allow them to exchange resource information by using proprietary protocols, very common using HTTP REST to get the information from the ERC to the RM.<br />
Typically in this use case the RM will become the new source of truth for the resources of our Organization, will add extra RA (Resource Attributes) and ignore other RA that existed in the ERC.<br />
Some organization that already realize that going forward in the SCIM path, the RM will manage the RO/RA, will also start create new RO in the RM.<br />
The Resource Subscribers will consume all or a subset of the RO/RA from the RM.<br />
Typically we will see this use case in small to mid size organization where resources were organized in a non standardize platform for Resources Management, where it isn't possible to cut/replace everything with a new system.</t>

</section>
<section anchor="resources-from-multiple-scim-sources-coordinated-by-a-resource-manager"><name>Resources from Multiple SCIM Sources Coordinated by a Resource Manager</name>
<t>One or more RC/RU, with single RM/RC/RU/RS and multiple RS.<br />
In this use case, the the CRUD operation for the RO (Resource Object) and its RA (Resource Attributes) does not belong to the RM (Resource Manager), this is done in a separate SCIM entity, the Resource Creator/Resource Updater. <br />
A good example of this is use case are Organization that have their HR application, and the lifecycle of the resource (typically groups and Users) is done by that application.<br />
We could also have devices where the creation and update operations are always done by the device  itself or by a mobile application/web server on their behalf, in this use case the roles of RC/RU moves away from the RM.
We could also have this use case where the RM is extended with the Roles of RC/RU for extra RA (Resources Attributes), but the RO (Resource Object) is typically created by the "HR System"/device. <br />
Typically we will see this use case in mid to large organization where no structure method to handle the resources start with a blank sheet of paper in a  greenfield deployment.</t>

</section>
<section anchor="resources-from-scim-and-non-scim-sources-coordinated-by-a-resource-manager"><name>Resources from SCIM and Non-SCIM sources, Coordinated by a Resource Manager</name>
<t>One or more ERC, one or more RC/RU, with single RM/RC/RU/RS and multiple RS.<br />
In this use case, one source of the Resource information is an ERC (External Resource Creator), or the entity that has the role of RC/RU (such as an HR System). In some cases the HR system can also consume information from the ERC and complement it. 
This doesn't mean that the RM will not need to consolidate RO/RA from the SCIM and non SCIM entities and consolidate and aggregate RO/RAs for those multiple sources. The RM gets its RO (Resource Object) from both systems the RC/RU and from the ERC, and need to define rules which ones to take and to ignore.</t>

</section>
<section anchor="complex-sources-including-multiple-resource-updaters"><name>Complex sources including Multiple Resource Updaters</name>
<t>One or more ERC, one or more RC/RU, with single RM/RC/RU/RS and multiple RS/RU.<br />
In this use case we add the capability of the Resource Subscriber to be also an Resource Update, it is very common that an SaaS application can be the source of truth for specifics RA and add extra details to the RO.<br />
Typically we will see this use case in large organization where resources were organized in a non standardize platform for Resources Management and it isn't possible to cut/replace everything with a new system. Those organization start to adopt many application that brings new attributes to the different resources that already exist in the system.</t>

</section>
<section anchor="complex-multi-directional-object-and-resource-management-with-simple-resource-subscribers"><name>Complex Multi-directional Object and Resource Management with simple Resource Subscribers</name>
<t>One or more ERC, one or more RC/RU/RS, with single RM/RC/RU/RS and multiple RS/RU.<br />
In this use case we introduce the possibility of the RC/RU (example given before the HR System) be interested in the attribute that was created updated by the RS/RU (also known as the SaaS application), an example could be adding the business email that was created by the mail service (that came from RS/RU) to the HR information service (the RC/RU/RS element).<br />
Typically we will see this use case in large organization where resources were organized in a non standardize platform for Resources Management and it isn't possible to cut/replace everything with a new system. Those organization start to adopt many application that brings attributes to the different resources that already exist in the system, but they need to have all the important attributes of Resources in a application in our examples "HR application".</t>

</section>
<section anchor="complex-multi-direction-objectresource-management-with-bi-directional-resource-subscriberupdaters"><name>Complex Multi-direction Object/Resource Management with bi-directional Resource Subscriber/Updaters</name>
<t>One or more ERC, one or more RC/RU/RS, with one or more RM/RC/RU/RS and multiple RS/RU.<br />
In this use case we introduce the possibility of having multiple Resource Managers, where the information from the RO/RA is consolidated across different domains/services.<br />
Typically we will see this use case in large organizations, or between organizations that have their own business to business communication and have the need to exchange information about Resources. This example also happens during mergers or acquisitions, where multiple RMs exist and IT departments have to manage each RM in parallel.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be guaranteed for the SCIM operations to ensure that only authenticated entities can perform the SCIM requests and the requested SCIM operations are authorized. 
SCIM resources (e.g., Users and Groups) can contain sensitive information.  Thus, data confidentiality MUST be guaranteed at the transport layer.
There can be privacy issues that go beyond transport security, e.g., moving personally identifying information (PII) offshore between different SCIM elements.
Regulatory requirements shall be met when migrating identity information between jurisdictional regions (e.g., countries and states may have differing regulations on privacy).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used in place of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>

<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>

<reference anchor="RFC7642">
  <front>
    <title>System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>
    <author fullname="K. LI" initials="K." role="editor" surname="LI"/>
    <author fullname="P. Hunt" initials="P." surname="Hunt"/>
    <author fullname="B. Khasnabish" initials="B." surname="Khasnabish"/>
    <author fullname="A. Nadalin" initials="A." surname="Nadalin"/>
    <author fullname="Z. Zeltsan" initials="Z." surname="Zeltsan"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>This document provides definitions and an overview of the System for Cross-domain Identity Management (SCIM). It lays out the system's concepts, models, and flows, and it includes user scenarios, use cases, and requirements.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7642"/>
  <seriesInfo name="DOI" value="10.17487/RFC7642"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>

<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>


<reference anchor="Device Schema Extensions to the SCIM model" target="https://datatracker.ietf.org/doc/draft-shahzad-scim-device-model">
  <front>
    <title>Device Schema Extensions to the SCIM model</title>
    <author initials="M." surname="Shahzad" fullname="M. Shahzad">
      <organization></organization>
    </author>
    <author initials="H." surname="Iqbal" fullname="H. Iqbal">
      <organization></organization>
    </author>
    <author initials="E." surname="Lear" fullname="E. Lear">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>
<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>Device Schema Extensions to the SCIM model</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
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
itmlsyS9Hfw3iUBE5YenAAA=

-->

</rfc>

