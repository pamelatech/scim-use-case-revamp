<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 3.3.5) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-correia-scim-use-cases-00" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2024" month="October" day="21"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 48?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 52?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
 The specifications have two primary goals:
   1. A common representation of a resource object and its attributes.
   2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
 These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:</t>

<t><list style="symbols">
  <t>CRUD: Create, Read, Update, Delete</t>
  <t>ERC: External Resource Creator</t>
  <t>IaaS: Infrastructure as a Service</t>
  <t>IDaaS: Identity as a Service</t>
  <t>IdM: Identity Manager</t>
  <t>JIT: Just In Time</t>
  <t>RC: Resource Creator</t>
  <t>RU: Resource Updater</t>
  <t>RM: Resource Manager</t>
  <t>RS: Resource Subscriber</t>
  <t>RO: Resource Object</t>
  <t>RA: Resource Attribute</t>
  <t>SaaS: Software as a Service</t>
  <t>SAML: Security Assertion Markup Language</t>
  <t>SCIM: System for Cross-domain Identity Management</t>
  <t>SET: Security Event Token</t>
  <t>SSO: Single Sign-On</t>
</list></t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +--------+
 |  SCIM   |                       |        | 
 | Server  |                       |        | 
 |         | <--- SCIM Action ---  |  SCIM  |
 | /Users  |                       | Client |
 | /Groups |                       |        |
 | /Device |                       |        |
 +---------+                       +--------+
  Figure 1: SCIM Components
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="resource-object-ro"><name>Resource Object (RO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="resource-attribute-ra"><name>Resource Attribute (RA)</name>
<t>A named element of a Resource Object (RO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the Resource Object (RO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific Resource Attributes (RA) of a Resource Object (RO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific Resource Attributes (RA) and/or Resource Objects (RO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms Resource Objects (RO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes Resource Objects (RO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about Resource Objects (RO) and their Resource Attributes (RA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RO) Resource| |(RA) Resource|   |(RO) Resource| |(RA) Resource|
   |   Object1   | |  Attribute1 |   |   Object2   | |  Attribute2 |
   +-------------+ +-------------+   +-------------+ +-------------+
          |               |                 |               |
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RC) Resource| |(RU) Resource|   |(RC) Resource| |(RU) Resource|
   |  Creators   | |  Updaters   |   |  Creators   | |  Updaters   |
   +-------------+ +-------------+   +-------------+ +-------------+
       |               |                 |                |
       +--------+------+-----------------+-------+--------+
                |                                |
                v                                v
       +----------------+              +----------------+
       | (RM) Resource  |              | (RM) Resource  |
       |     Manager    |              |     Manager    |
       +----------------+              +----------------+
                |                                |
       +----------------+              +----------------+
       |                |              |                |
       v                v              v                v
  +-------------+ +-------------+   +-------------+ +-------------+
  |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
  |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
  +-------------+ +-------------+   +-------------+ +-------------+
          |                                  |
    +----------------+                  +----------------+
    |                |                  |                |
    v                v                  v                v
 +-------------+ +-------------+   +-------------+ +-------------+
 |(RO) Resource| |(RO) Resource|   |(RO) Resource| |(RO) Resource|
 |   Object1   | |   Object2   |   |   Object1   | |   Object2   |
 +-------------+ +-------------+   +-------------+ +-------------+
        Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
          Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some Resource Attributes (RA) of a Resource Object (RO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional Resource Attributes (RA) of the previously created Resource Objects (RO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
              Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual Resource Objects (RO) or Resource Attributes (RA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of Resource Objects (RO) and their Resource Attributes (RA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of Resource Objects (RO) and their Resource Attributes (RA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
         Figure 7:  SCIM actions aggregated by a SCIM server then transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:<op> id:xyz</op></t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
         Figure 8:  SCIM actions aggregated by a SCIM server then transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:<op> id:xyz</op></t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
The Resource Subscriber (RS) will decide which RA (Resource Attributes) to consider and how the RO (Resource Object) will appear in its resource database.
Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the single-tenant RS.
A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.
~~~~~~~~
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 9: Single-Tenant Resource Subscriber that is the SCIM Server
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.
~~~~~~~~
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 10: Single-Tenant Resource Subscriber that is the SCIM Client
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the multi-tenant RS (Resrouce Subscriber).
A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.
~~~~~~~~
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+</t>

<figure><artwork><![CDATA[
     Figure 11: Multi-Tenant Resource Subscriber that is the SCIM Server ~~~~~~~~
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.
~~~~~~~~
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | --------------------------------&gt;||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+</t>

<figure><artwork><![CDATA[
     Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client ~~~~~~~~
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant Resource Attributes (RA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates Resrouce Object (RO) either in central IdM (Identity Management) system or directly in a target aplications.
~~~~~~~~
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 13: Single-Tenant Resource Creator/Updater that is the SCIM Client
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.
~~~~~~~~
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------&gt; |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
         Figure 14: Single-Tenant Resource Creator/Updater that is the SCIM Server
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates Resource Objects (RO) either in a central IdM (Identity Management) system or directly in target applications.
~~~~~~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 15: Multi-Tenant Resource Creator/Updater that is the SCIM Client
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). 
~~~~~~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 16: Multi-Tenant Resource Creator/Updater that is the SCIM Server
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive Resource Objects (RO) and their Resource Attributes (RA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which Resource Attributes (RA) to obtain from each source. There might also be independent agreements for different groups of Resource Objects (RO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the Resource Objects (RO) or some of their Resource Attributes (RA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~~~~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 17: Single-Tenant Resource Manager that is the SCIM Server
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of Resource Objects (RO) and their Resource Attributes (RA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~~~~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 18: Single-Tenant Resource Manager that is the SCIM Client
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.
~~~~~~~~
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
         Figure 19: Single-Tenant Resource Manager that is the SCIM Client and SCIM Server
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull
~~~~~~~~
                  Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |<br />
|(Source A)|-------&gt;||         ||          ||        |         |       <br />
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||-------&gt;|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |-------&gt;||(Consumer||          ||        |(Consumer|<br />
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
              +-----------------------+ 
   Figure 20: Single-Tenant Resource Manager that is the SCIM Server and SCIM Client
~~~~~~~~</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The Resource Object (RO) of the device, provided by the manufacturer, includes its Resource Attributes (RA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the Resource Object (RO) in the customer's device database, it will be the server's responsibility to add and update the Resource Attributes (RA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the Resource Object (RO) to the customer's device management platform.
~~~~~~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 21: Manufactor is the SCIM client and push RO to Customers 
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the Resource Object (RO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the Resource Object (RO) from the multi-tenant SCIM server provided by the manufacturer.
~~~~~~~~
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------&gt; |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
         Figure 22: Manufactor is the SCIM Server and Customers Pull information about Device
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional Resource Attributes (RA) to be added to the Resource Object (RO) that is maintained in the device manager.
~~~~~~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | &lt;------&gt; | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | &lt;------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | &lt;------&gt; | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | &lt;---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
         Figure 23:  Commissioner tool provide Resource Attribtues to Device Manager
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.
~~~~~~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | &lt;------&gt; | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------&gt; | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | &lt;------&gt; | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------&gt; |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
         Figure 24: Device manager provides RO and RA to the Devices through Commissioner Tool
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.
~~~~~~~~
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | &lt;------&gt; | RA |
|  SCIM  | -------------&gt; |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | &lt;------&gt; | RA |
+--------+                +---------------+          +----+
         Figure 25:  Device Manager provide Resource Attributes to the Commissioner tool to configure device
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the Resource Attributes (RA) of a Resource Object (RO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized Resource Attributes (RA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective Resource Attributes they are responsible for. They will use the SCIM action of Active Push to pass the Resource Attributes of the Resource Object to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.
~~~~~~~~
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------&gt; ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || &lt;------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
         Figure 26: Single Ro with diferent RA authority implemented between the Provision Domain and the customer SaaS App 
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the Resource Objects (RO). The Active/Delta Pull method will be used to retrieve the specialized Resource Attributes that are the responsibility of the application.
~~~~~~~~
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------&gt; |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | &lt;------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
         Figure 27: Single RO with diferent RA authority implemented between the Provision Domain and the customer SaaS App 
~~~~~~~~</t>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that Resource Objects (RO) and its Resrouce Attributes (RA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
         Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>

<reference anchor="Device Schema Extensions to the SCIM model" target="https://datatracker.ietf.org/doc/draft-shahzad-scim-device-model">
  <front>
    <title>Device Schema Extensions to the SCIM model</title>
    <author initials="M." surname="Shahzad" fullname="M. Shahzad">
      <organization></organization>
    </author>
    <author initials="H." surname="Iqbal" fullname="H. Iqbal">
      <organization></organization>
    </author>
    <author initials="E." surname="Lear" fullname="E. Lear">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>
<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>


    </references>

</references>


<?line 966?>



  </back>

<!-- ##markdown-source:
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
XUrApaY8e3d48P8BOP9PN/sjAQA=

-->

</rfc>

