<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.1 (Ruby 3.2.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-correia-scim-use-cases-00" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2023" month="October" day="23"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 48?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 52?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model additional resource definition). 
The specifications have two primary goals: 
1) A common representation of a resource object and its attributes, and 
2) Standardized patterns for how those resources can be operated on, including "CRUD" operations that create, read, update or delete resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc. These goals are codified as a data model in <xref target="RFC7643"></xref> defining resources, attributes and default schema, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overview, concepts, flows, and use cases implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike the practice of some protocols like Application Bridging for Federated Access Beyond web (ABFAB) and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes movement of data only between two parties in a HTTP client-server model, implementation patterns are discussed in this document that use concepts beyond the core schema and protocol, but that are needed to understand how SCIM actions can fit into greater architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:</t>

<t><list style="symbols">
  <t>CRUD: Create, Read, Update, Delete</t>
  <t>RC: Resource Creator</t>
  <t>RU: Resource Updater</t>
  <t>RM: Resource Manager</t>
  <t>RS: Resource Subscriber</t>
  <t>RO: Resource Object</t>
  <t>RA: Resource Attribute</t>
  <t>ERC: External Resource Creator</t>
  <t>IaaS: Infrastructure as a Service</t>
  <t>JIT: Just In Time</t>
  <t>PaaS: Platform as a Service</t>
  <t>SaaS: Software as a Service</t>
  <t>IDaaS: Identity as a Service</t>
  <t>IdM: Identity Manager</t>
  <t>SAML: Security Assertion Markup Language</t>
  <t>SCIM: System for Cross-domain Identity Management</t>
  <t>SSO: Single Sign-On</t>
</list></t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>SCIM architecture is a client-server model centered on a normative concept of a "resource". Resources have types (such as a user or a group) and each unique instance of a resource type is represented by a JSON object, actively accessed via a standardized REST API.  Each resource object can be managed individually or managed in bulk using actions that by default are specified in <xref target="RFC9110"></xref> (HTTP GET, PUT, POST etc), but that may expand to concepts in extension documents, for example security event tokens (SETs). This model therefore enables organizations to represent information about user populations and the groups that these user populations are part of using the core specifications and to extend to other important resources using extension drafts in the same family with the high level concepts of performing SCIM actions on resource objects. SCIM actions result in resource object and associated data "moving" between the client and server, as clients actively push and pull information that reflects change over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
+---------+                       +--------+
|  SCIM   |                       |        | 
| Server  |                       |  SCIM  | 
|         | <--- SCIM Action ---> | Client |
| /Users  |                       |        |
| /Groups |                       |        |
+---------+                       +--------+
]]></artwork></figure>

<t>The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models.<br />
The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing a common schemas and extension model, as well as binding documents to provide patterns for exchanging this schema using standard protocols. In essence, make it fast, cheap, and easy to move resources in to, out of, and around the applications.<br />
The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="evolution-and-new-challenges"><name>Evolution and new Challenges</name>
<t>As the protocol has been adopt since its introduction in 2012, most of the IDMs and applications started to adopted it, mainly in the replacement of old protocols like LDAPv3. With the implementation the market started to reach more complex topologies, no longer the simple Client Server where there were only two SCIM entities. 
We start to see many different SCIM entities with different roles and doing its own manipulation of the object (RO) and its attributes (RA).
The maturity of the protocol also brought some challenges, that we don't plan to enumeratee all of them, but give a couple of examples.</t>

<section anchor="reconciliation"><name>Reconciliation</name>
<t>For some reason, the RO and its RA’s that was push by the Client was change in the Server (by some mechanism that was outside the SCIM agreement), which means that until the RO or one of its RA’s changes in the Client, there will be no “fix” to the RO and its RA that are in the Server.</t>

</section>
<section anchor="hr-applications"><name>HR Applications</name>
<t>This type of SCIM element doesn’t do any management to the RO and RA information, but it is the creator for RO and RA, most of the times have the RA that are generic to all applications (like firstname, lastname, national ID, office address, home address, etc.), most of the times this elements will not know RA like email, telephone number, etc. This RO and Ra needs to be available in the IdMs, for them to provide it to all the SCIM subscribers application.</t>

</section>
<section anchor="extra-ra-for-ro"><name>Extra RA for RO</name>
<t>Some SCIM application that are typically SCIM Servers, are the creators and updaters of specific RA, for example an email server that will be a SCIM server should create the email RA for all the RO, but should only consume the other RA like firstname, lastname, etc.</t>

</section>
</section>
<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases we need to understand 4 different concepts of the protocol, that will describe underlying protocol, the different orchestrators roles, how we start the SCIM interaction and what methods we have to execute the actions.</t>

<section anchor="data-model"><name>Data Model</name>
<t>SCIM defines two types of data entities: resources and attributes.</t>

<section anchor="resource-object-ro"><name>Resource Object (RO)</name>
<t>A JSON object representing a user, group (or extension object) to be manipulated through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be acted on via the endpoints and parameters defined in <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="resource-attribute-ra"><name>Resource Attribute (RA)</name>
<t>A named element of a Resource Object. Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary etc) and characteristics (required, unique etc).</t>

</section>
</section>
<section anchor="http-client-server-roles"><name>HTTP Client-Server Roles</name>
<t>HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol.<br />
A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API Security, managing client identifiers &amp; keys as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider.  The client initiates SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows.
An entity can have one or more orchestrators roles, depending on the overall provisioning architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the Resource Object (RO). Typically we can see this role in HR or resource management applications that are responsible for creating resources and some of its attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific attributes of a Resource Object (RO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage a specific Resource Attribute (RA).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms resource objects from resource creators/updaters (RC/RU) and make them available for resource subscribers (RS) using multiple SCIM interactions, an example of this role could be an Identity-as-a-Service (IDaaS) cloud platform.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes information in resource objects (RO) and typically don't create new objects or attributes. An example of entities that play this role include SaaS applications relying on an IDaaS cloud platform.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about resources and its attributes, but does not participate in SCIM flows, examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RO) Resource| |(RA) Resource|   |(RO) Resource| |(RA) Resource|
   |   Object1   | |  Attribute1 |   |   Object2   | |  Attribute2 |
   +-------------+ +-------------+   +-------------+ +-------------+
          |               |                 |               |
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RC) Resource| |(RU) Resource|   |(RC) Resource| |(RU) Resource|
   |  Creators   | |  Updaters   |   |  Creators   | |  Updaters   |
   +-------------+ +-------------+   +-------------+ +-------------+
       |               |                 |                |
       +--------+------+-----------------+-------+--------+
                |                                |
                v                                v
       +----------------+              +----------------+
       | (RM) Resource  |              | (RM) Resource  |
       |     Manager    |              |     Manager    |
       +----------------+              +----------------+
                |                                |
       +----------------+              +----------------+
       |                |              |                |
       v                v              v                v
  +-------------+ +-------------+   +-------------+ +-------------+
  |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
  |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
  +-------------+ +-------------+   +-------------+ +-------------+
          |                                  |
    +----------------+                  +----------------+
    |                |                  |                |
    v                v                  v                v
 +-------------+ +-------------+   +-------------+ +-------------+
 |(RO) Resource| |(RO) Resource|   |(RO) Resource| |(RO) Resource|
 |   Object1   | |   Object2   |   |   Object1   | |   Object2   |
 +-------------+ +-------------+   +-------------+ +-------------+
                      Figure 1: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are actions or activities that may cause a SCIM action to occur.  Triggers can occur as a result of business processes like a corporate hiring event, but can also be scheduled events such as a unix bash script running as a chron job, or can be just-in-time events such as SAML assertion arriving at a federated relying party that identifies a not-seen-before user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers used to allow CRUD (Create, Read, Update, Delete) using SCIM Actions or Operations as it is designed to capture a class of use case that makes sense to the actor requesting it rather than to describe a protocol operation.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a configured-in-advance agreement where a SCIM client performs an action at a specific time. This trigger is often recurring, and in that case the combination of trigger and action together may be referred to as "polling" the SCIM server. An example of a periodic interval trigger could be a UNIX chron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event occuring such as a specific entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. A SCIM action could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>; for example an application acting as a resource subscriber and SCIM client could receive a SCIM event denoting creation of a new user object, triggering a SCIM action to fetch all the attributes for that user.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server.</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-on)</name>
<t>Single Sign-on triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
          Figure 2:  SCIM  Flow and Entities map
]]></artwork></figure>

<t><list style="numbers">
  <t>SSO trigger that creates the user and might create some RA (Resource Attributes) of a RO (Resource Object)</t>
  <t>SCIM actions that will complement the attributes created before with an SSO JIT with additional RA (Resource Attributes) of the RO (Resource Objects) created before. <br />
This use case combines the SCIM protocol with other protocols used for Single Sign-On, specially in the use case of JIT (Just in time Provision), specially useful with protocols like SAML that is limit by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by corresponding those activities to HTTP verbs such as POST, PUT, GET, DELETE etc.  The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles and an SCIM entity can have multiple roles, depending on the objective of the use case that we are describing.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary resource creator/updater.</t>

<section anchor="resource-object-creationupdate-from-client-to-server"><name>Resource Object creation/update from Client to Server</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, that can also be called as SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                (1)                |                |
|                | --------------------------------> |                |
|                |                                   |                |
|                |                (2)                |      SCIM      |
|     Client     | <-------------------------------- |     Server     |
|   (typically   |                                   |  (typically a  |
|    an IdM)     |                (3)                |   Application) |
|                | --------------------------------> |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                (4)                |                |
|                | <-------------------------------- |                |
+----------------+                                   +----------------+
              Figure 3: SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>

<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client will map to the RM/RC/RU and the Server will map into RS.</t>

</section>
<section anchor="resource-object-creation-from-a-creation-entity"><name>Resource Object creation from a Creation Entity</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, can also be called as Service Provider in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>, in this model the Client is just responsible for a limit set of attributes and do not do any management overall, and the Resource management function resides on the Server.</t>

<figure><artwork><![CDATA[
+--------------+                                   +---------------+
|              |                (1)                |               |
|              | --------------------------------> |               |
|              |                                   |               |
|              |                (2)                |     SCIM      |
|    Client    | <-------------------------------- |    Server     |
| (typically   |                                   | (typically an |
|  an HR       |                (3)                |      IdM)     |
| Application) | --------------------------------> |               |   
|              |                                   |     RM/RS     |
|   RC/RU      |                (4)                |               |
|              | <-------------------------------- |               |
+--------------+                                   +---------------+
             Figure 4:  SCIM  Flow and Orchestrator roles maps
   
]]></artwork></figure>
<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client will map to the RC/RU and the Server will map into RM/RS. The SCIM client is sometimes called as the "HR Application", because it responsibilities are only on be the creator and updater of the RO and specific number of its RA, the client in this case has no responsibilities on the management of Resources, typically done by an IdM.</t>

</section>
<section anchor="resource-object-creation-from-a-creation-entity-and-consumption-from-an-application"><name>Resource Object creation from a Creation Entity and consumption from an Application</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, this Client is just responsible for a limit set of attributes and do not do any management overall the RO. This SCIM element that is going to manage the RO will then be the Client for other SCIM services that will consume the RO/RA, that might have more RA than the original RO provided by the originator of the RO.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |     (1)        |               |      (1)        |         |
|        | -------------> |               | --------------> |         |
| Client |                |SCIM Server    |                 |         |
|        |     (2)        |               |      (2)        |  SCIM   |
|        | <------------- |               | <-------------- | Server  |
|        |                |         Client|                 |         | 
|        |     (3)        |               |      (3)        |         |
|        | -------------> |               | --------------> |         |
|        |                |  RM/RS/RC/RU  |                 |         |
| RC/RU  |     (4)        |               |      (4)        |   RS    |
|        | <------------- |               | <-------------- |         |
+--------+                +---------------+                 +---------+
                     Figure 5:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>
<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client on the left will map to the RC/RU and the Server in the middle will map into RM/RS, the SCIM client on the left is also sometimes called as the "HR Application", because it responsibilities are only on be the creator and updater of the RO and specific number of its RA, the client in this case has no responsibilities in doing any management of the Resources, typically done by an IdM. <br />
The center component as describe is the Server for the client on the left, will act as the Client for the server on the right, which typically is an SaaS application that want to consume RO and its RA from an RM.</t>

</section>
<section anchor="resource-object-creation-from-a-creation-entity-and-consumption-from-an-application-when-different-resource-attributes-are-generated-in-different-entities"><name>Resource Object creation from a Creation Entity and consumption from an Application when different Resource Attributes are generated in different entities</name>
<t>In this model we will have a Client that is going to provide information about a RO and its RA to a Server, this Client is just responsible for a limit set of attributes and do not do any management overall the RO. This SCIM element that is going to manage the RO will then be the Client for other SCIM services that will consume the RO/RA, that might have more RA than the original RO provided by the originator of the RO. 
Now the right SCIM element will have it own RA that needs to be updated in the RM (Resource Manager), that will also update the SCIM element on the left.</t>

<figure><artwork><![CDATA[
 +----------+               +---------------+                +--------+
 |          | -----(1)----> |               | -----(1)-----> |        |
 |  Client  | <----(2)----- |SCIM           | <----(2)------ |  SCIM  |
 |          | -----(3)----> |Server         | -----(3)-----> | Server |
 |          | <----(4)----- |         Client| <----(4)------ |        |
 |          |               |               |                |        |
 |          |               |               |                |        |
 | RC/RU/RS | <----(1)----- |  RM/RS/RC/RU  | <----(1)------ |   RS   |
 |          | -----(2)----> |Client         | -----(2)-----> |        |
 |   SCIM   | <----(3)----- |           SCIM| <----(3)------ | Client |
 |  Server  | -----(4)----> |         Server| -----(4)-----> |        |
 +----------+               +---------------+                +--------+
                 Figure 6:  SCIM  Flow and Orchestrator roles maps
   
]]></artwork></figure>
<t><list style="numbers">
  <t>Before creating/updating a RO/RA the SCIM client will always do a HTTP GET to get current information from the SCIM Server.</t>
  <t>SCIM Server will provide the current information on the resources asked by the SCIM Client.</t>
  <t>Based on the RO and RA returned by the Server, there will be a HTTP POST, PUT, PATCH depending on the operation that the Client want to achieve.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>The SCIM client on the left will map to the RC/RU and the Server in the middle will map into RM/RS, the SCIM client on the left is also sometimes called as the "HR Application", because it responsibilities are only on be the creator and updater of the RO and specific number of its RA, the client in this case has no responsibilities in doing any management of the Resources, typically done by an IdM. <br />
The center component as describe is the Server for the client on the left, will act as the Client for the server on the right, which typically is an SaaS application that want to consume RO and its RA from an RM.
In addition to the models seen before now the "HR Application" also subscribe to RA that are created by the RS and reported by the RM, the Application will be the creator of specific attributes.<br />
So we will see that the 3 SCIM elements will be RC/RU/RS for each RO/RA.</t>

</section>
</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to ask for data from a SCIM Server. A client active pull can be used to fetch one object, a subset of objects, or all objects from a SCIM server. In cases where the client is a resource updater, it may perform an active pull of an object or objects in order to determine whether an active push of new data is necessary. Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, but where there isn't any need to track individual RO/RA. 
Another example of a client active pull would be a client that needs to have details of a specific device <xref target="Device Schema Extensions to the SCIM model"></xref> that was onboarded by a mobile application and that need to provide the RO/RA information on the behalf of the device.</t>

<section anchor="resource-object-creation-or-update"><name>Resource Object Creation or Update</name>
<t>In this model we will have a Client that is going to pull information about a RO/RA from a Server. In this model the Client is going to management all the RO (Resource Objects) and its RA (Resource Attributes), that are provided by the Server, and the RM (Resource Management) function resides on the Client.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Client  | --------------------------------> |  Server  |
|          |                                   |          |
|          |                (2)                |          |
|          | <-------------------------------- |          |   
|  RS/RM   |                                   |   RC/RU  |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
        Figure 7:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>

<t><list style="numbers">
  <t>The SCIM client will do an HTTP GET to obtain the RO/RA that will be available in the Server.</t>
  <t>The SCIM Server will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

<t>A typical example of this use case is a device that is going to use a mobile application or browser base to enroll devices and gathers its attributes, that mobile application or browser after enrollment process is finish will do a trigger to notify the client that is ready to provide the RO/RA of the device. It is the SCIM client that will do al the Resource management for all the devices. <br />
Another example could be a SCIM client that has the role of an IDM that is not the owner of a specific RA  and gets it from the Server, for this kind of scenarios the SCIM server would need to create an change database for the attributes that are own by the server</t>

</section>
<section anchor="resources-subscription"><name>Resources Subscription</name>
<t>In this model we will have the Client that is going to pull information about a RO/RA from the Server. In this model, the Client has is no status/change database, and it gets a list of all the RO/RA based on filters provided by the client, so there will be a full update every synchronization cycle.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
         Figure 8:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>

<t><list style="numbers">
  <t>The SCIM client will do an HTTP GET to obtain the selected list of RO (Resource Object) and its RA (Resource Attributes).</t>
  <t>The SCIM Service Provider will return the RO and its RA with additional metadata information to allow for audit.</t>
</list></t>

<t>A good example would be SaaS service that needs to consume a list of contacts or devices, this SaaS service will need to know the relevant RO/RA, this operation will happen periodically and every time will get a full list of all the RO (Resource Objects).</t>

</section>
<section anchor="resource-object-creation-or-update-and-subscription"><name>Resource Object Creation or Update and Subscription</name>
<t>In this model we will bring together both of the two previous SCIM actions for pull information, where a typically a device can be the creator or their own attributes and will allow an SaaS service to subscribe to all the different RO/RA and deliver additional services for itself and other devices. It isn't expected from any of the SCIM clients in the Active pull model to create any status database of attributes changes, so the clients will always do a pull on one or many RO (Resource Objects) based on triggers.</t>

<figure><artwork><![CDATA[
+----------+                 +---------------+               +--------+
|          |                 |               |               |        |
|          |                 |               |               |        |
|          |                 |               |               |        |
|  SCIM    |       (1)       |Client         |      (3)      |        |
| Server   | <-------------- |           SCIM| <------------ | Client |
|          |                 |         Server|               |        | 
|          |       (2)       |               |      (4)      |        |
|          | --------------> |               | ------------> |        |
|          |                 |  RM/RS/RC/RU  |               |        |
|   RC/RU  |                 |               |               |   RS   |
|          |                 |               |               |        |
+----------+                 +---------------+               +--------+
                    Figure 9:  SCIM  Flow and Orchestrator roles maps
]]></artwork></figure>
<t><list style="numbers">
  <t>The SCIM client will do an HTTP GET to obtain the RO/RA that will be available in the Server.</t>
  <t>The SCIM Server will return the RO/RA with additional metadata information to allow for audit.</t>
  <t>The SCIM client will do an HTTP GET to obtain the selected list of RO (Resource Object) and its RA (Resource Attributes).</t>
  <t>The SCIM Service Provider will return the RO and its RA with additional metadata information to allow for audit.</t>
</list></t>

<t>A typical example of this use case is a device that is going to use a mobile application or browser base to enroll devices and gathers its attributes, that mobile application or browser after enrollment process is finish will do a trigger to notify the client that is ready to provide the RO/RA of the device. It is the SCIM client that will do all the Resource management for all the devices.<br />
This SCIM element in the center will also provide list list of contacts or devices, that can be consume by different SCIM entities, this operation will happen when a specific trigger will be execute by the client on the right, to get a list RO (Resource Objects) and RA (Resource Attributes) that will be defined by the filter on the client in the right.</t>

</section>
</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why and how we find them in the cross-domain environment. The ultimate goal is guidance for developers working on common models, explaining challenges and components.
Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to allow from simple to complex architectures for cross domain resource management. Orchestrators roles are mapped to the use cases to simplify the task of explaining the multiple functions of the SCIM elements. Use cases build on each other, starting with simple cases, and ending with the most complex ones.</t>

<section anchor="self-referential-resource-updates-via-me"><name>Self-Referential Resource Updates via /me</name>
<t>Get information about persona /me endpoint.<br />
A use case cover in <xref target="RFC7644"></xref> where a SCIM client can do CRUD operation on the entity of the user, in this use case the SCIM client that is the RM (Resource Manager), RC (Resource Creator) and RU (Resource Updater), will be able to read, create, update the RO (Resource Object) and its RA (Resource Attributes) in the RS (Resource Subscriber). the RS will provide an /me URI to achieve this.<br />
Special considerations exist from authorization perspective; unlike other listed CRUD use cases, the authorization for this use case only allows access to the RO (Resource Object) of the resource owner.</t>

</section>
<section anchor="simple-resource-update"><name>Simple Resource Update</name>
<t>Single RM/RC/RU and multiple RS.<br />
This is a very common and simple SCIM use case, we have the IdM/Device Managers/etc. do all CRUD operation with the resources, then after the trigger mechanisms the resources information RO/RA reach the RS (Resource Subscribers), also know as the SaaS Application.<br />
The RS (Resource Subscriber) will take the decision on which RA (Resource Attributes) to consider and how the RO (Resource Object) will show in its resource database.<br />
Typically we will find this kind of use case in small to mid size organization, where there is no structure method to handle the resources and typically in Organization that start with a blank sheet of paper in a greenfield deployment.</t>

</section>
<section anchor="resource-updates-originating-at-a-non-scim-source"><name>Resource Updates Originating at a Non-SCIM Source</name>
<t>One or more ERC with single RM/RC/RU and multiple RS.<br />
This is another common use case, because it allow the organization to adopt SCIM protocol for CRUD operations of their resources. In this use case the organization already have an existent database of resources that is going to be the source of truth for the Resource Manager. <br />
Normally this ERC, specially if we are talking about user Identity, will have a User database that can be accessible using LDAP, some times the ERC can provide RO/RA using SAML Single Sign-On using Just in time Provision. We also see some IDaaS providing softwares that allow them to exchange resource information by using proprietary protocols, very common using HTTP REST to get the information from the ERC to the RM.<br />
Typically in this use case the RM will become the new source of truth for the resources of our Organization, will add extra RA (Resource Attributes) and ignore other RA that existed in the ERC.<br />
Some organization that already realize that going forward in the SCIM path, the RM will manage the RO/RA, will also start create new RO in the RM.<br />
The Resource Subscribers will consume all or a subset of the RO/RA from the RM.<br />
Typically we will see this use case in small to mid size organization where resources were organized in a non standardize platform for Resources Management, where it isn't possible to cut/replace everything with a new system.</t>

</section>
<section anchor="resources-from-multiple-scim-sources-coordinated-by-a-resource-manager"><name>Resources from Multiple SCIM Sources Coordinated by a Resource Manager</name>
<t>One or more RC/RU, with single RM/RC/RU/RS and multiple RS.<br />
In this use case, the the CRUD operation for the RO (Resource Object) and its RA (Resource Attributes) does not belong to the RM (Resource Manager), this is done in a separate SCIM entity, the Resource Creator/Resource Updater. <br />
A good example of this is use case are Organization that have their HR application, and the lifecycle of the resource (typically groups and Users) is done by that application.<br />
We could also have devices where the creation and update operations are always done by the device  itself or by a mobile application/web server on their behalf, in this use case the roles of RC/RU moves away from the RM.
We could also have this use case where the RM is extended with the Roles of RC/RU for extra RA (Resources Attributes), but the RO (Resource Object) is typically created by the "HR System"/device. <br />
Typically we will see this use case in mid to large organization where no structure method to handle the resources start with a blank sheet of paper in a  greenfield deployment.</t>

</section>
<section anchor="resources-from-scim-and-non-scim-sources-coordinated-by-a-resource-manager"><name>Resources from SCIM and Non-SCIM sources, Coordinated by a Resource Manager</name>
<t>One or more ERC, one or more RC/RU, with single RM/RC/RU/RS and multiple RS.<br />
In this use case, one source of the Resource information is an ERC (External Resource Creator), or the entity that has the role of RC/RU (such as an HR System). In some cases the HR system can also consume information from the ERC and complement it. 
This doesn't mean that the RM will not need to consolidate RO/RA from the SCIM and non SCIM entities and consolidate and aggregate RO/RAs for those multiple sources. The RM gets its RO (Resource Object) from both systems the RC/RU and from the ERC, and need to define rules which ones to take and to ignore.</t>

</section>
<section anchor="complex-sources-including-multiple-resource-updaters"><name>Complex sources including Multiple Resource Updaters</name>
<t>One or more ERC, one or more RC/RU, with single RM/RC/RU/RS and multiple RS/RU.<br />
In this use case we add the capability of the Resource Subscriber to be also an Resource Update, it is very common that an SaaS application can be the source of truth for specifics RA and add extra details to the RO.<br />
Typically we will see this use case in large organization where resources were organized in a non standardize platform for Resources Management and it isn't possible to cut/replace everything with a new system. Those organization start to adopt many application that brings new attributes to the different resources that already exist in the system.</t>

</section>
<section anchor="complex-multi-directional-object-and-resource-management-with-simple-resource-subscribers"><name>Complex Multi-directional Object and Resource Management with simple Resource Subscribers</name>
<t>One or more ERC, one or more RC/RU/RS, with single RM/RC/RU/RS and multiple RS/RU.<br />
In this use case we introduce the possibility of the RC/RU (example given before the HR System) be interested in the attribute that was created updated by the RS/RU (also known as the SaaS application), an example could be adding the business email that was created by the mail service (that came from RS/RU) to the HR information service (the RC/RU/RS element).<br />
Typically we will see this use case in large organization where resources were organized in a non standardize platform for Resources Management and it isn't possible to cut/replace everything with a new system. Those organization start to adopt many application that brings attributes to the different resources that already exist in the system, but they need to have all the important attributes of Resources in a application in our examples "HR application".</t>

</section>
<section anchor="complex-multi-direction-objectresource-management-with-bi-directional-resource-subscriberupdaters"><name>Complex Multi-direction Object/Resource Management with bi-directional Resource Subscriber/Updaters</name>
<t>One or more ERC, one or more RC/RU/RS, with one or more RM/RC/RU/RS and multiple RS/RU.<br />
In this use case we introduce the possibility of having multiple Resource Managers, where the information from the RO/RA is consolidated across different domains/services.<br />
Typically we will see this use case in large organizations, or between organizations that have their own business to business communication and have the need to exchange information about Resources. This example also happens during mergers or acquisitions, where multiple RMs exist and IT departments have to manage each RM in parallel.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be guaranteed for the SCIM operations to ensure that only authenticated entities can perform the SCIM requests and the requested SCIM operations are authorized. 
SCIM resources (e.g., Users and Groups) can contain sensitive information.  Thus, data confidentiality MUST be guaranteed at the transport layer.
There can be privacy issues that go beyond transport security, e.g., moving personally identifying information (PII) offshore between different SCIM elements.
Regulatory requirements shall be met when migrating identity information between jurisdictional regions (e.g., countries and states may have differing regulations on privacy).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used in place of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>

<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>

<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>

<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>

<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>


<reference anchor="Device Schema Extensions to the SCIM model" target="https://datatracker.ietf.org/doc/draft-shahzad-scim-device-model">
  <front>
    <title>Device Schema Extensions to the SCIM model</title>
    <author initials="M." surname="Shahzad" fullname="M. Shahzad">
      <organization></organization>
    </author>
    <author initials="H." surname="Iqbal" fullname="H. Iqbal">
      <organization></organization>
    </author>
    <author initials="E." surname="Lear" fullname="E. Lear">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>
<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>Device Schema Extensions to the SCIM model</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <date year="2023" month="July"/>
  </front>
</reference>


    </references>


<?line 496?>



  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+19e2/jRp7g/wb8HQoOcG1fJLnb3bfZeAeDdWz3xNl22yfZ
yB2CxoGiShJjitSwKDsaNAbzNQ64+3LzSe73qhdJ+RVnsrvXBpK2yWI9fu9X
VfX7/e0tUyfF5H8leVnoQ1VXK729NSnTIlnAn5Mqmdb9tKwqnSV9k2aL/sro
fpoYbfqvX29vZcuKPjL1wevX374+gO5W40VmTFYW9XoJXZydXr3f3rrR67uy
mhyqn86KWleFrvsn2HdPjY7Pzj9tb8Hbm1lVrpaH9GR7a3srTepDlRXTcnur
zuoc+no1WptaL9S0rNRxVRrTn5SLJCvU2UQX0GatzpMimekF/HWoTvQ0K7Ia
ZmJ66uJWV7eZvuup47JI9bKGZ7BuNdR/XmUVfWFebW8l43Glb3EkmIS6Nlod
41rhzYekmB0qXUCbVT0vq8Ptrb5iKF0mq7xUP5TVDJozrLa3lIK/D9VxZtJS
8bwNPtUw4fxQLZMVgfVfU2wwSMsFLtn3uNB5ok6yYpZr19d5lsKiy2mNoyzL
KsG1BX2+WtJngwl99q8L2xx7f4XdF2W1gI9u9SF+NXx/fPDmzbeH+AbB3Hj3
zT+9exv8/s7+/u2bN6+D3w/s7//87s039PuJvs1SrUbpHOalTn+pdYHkYFRd
qnquCb9qUU50Ts3hp04AdICxeV0vzeH+/iSpk7pK0htdDTJdTwew/H0gyn2m
RzNP5n9JJkyPExqtT/3Z7phaHj8P+c4hlv6yuDgfqBEP2Hjx/UCd/Xmc5I3H
pwP1QSeVPIWlwLOD1wdv+6+/UfiQhr2symmWa6LkkU5XFRLv6S1Qoboqb2Ci
zwQNPmK4aOzM/CYQuRyo71dF3Xj6cQC8suj/CMSnm+8Ahv+WGb0JKED4/b5K
xgZXVuPfV/PMKFjWChlTLavyNptoeBKydCksTXxsdK7TWk8UyCdF8kmVU17U
42WG2kUI7A2UOqtVnqyhj1VNnRjq5JVRqZMeBCeRItO8vJNfsxpkVpqvcLpu
LvJqscxpHGJc7MrAqpiNzcCCYZFNJsj021tfKRCWVTlZpczoV89ajZomiyxf
IzjMUqfZNEt5RPWTcPknmp389e6TQtBrk80KACdQxoJ6VJU25apKeVmwmIIA
s0SMIVFB95mdw8LPoZ4ntSo09zQGcJSLxarAKcCjBAWUga5YJSheixGEVkis
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
HTW0twpO/WnNqHPivPh7l6baa3v74Nq6Wrws2u5ZG4l3GzJ5EG1Ru8CK2rS0
uAUbaL8abcGMXozZWm/xR+ys//YEO+uLifX/u4kl88319JHmluTd+NzxLuOr
16KTcAxMiWCY4j+HNUZHyXEZ1Lphk4WBjfvtMjl+ik+opIQyHXgZluHZTI/g
wFbdtOHbE6ZMawvQwPqw+55xzcI3aFnYg3X8FDMqV21uvxNLRejXGiuxlWYt
w+H54Dc1Nzkf5k/06Mic+4NuKGmZhc3d9sPGzxcr9j+OFfuRthULDcdr8zgD
yOHJD/bso/CsIBYOrkZteB7UV8h+q73wgBkSW0F5YzRiwILN7Zpfb9bqD2r9
aDtcYGyICQUm9L0mlrwPG8j2FBvOE4MFDFYxV3zkTzqK3ve9Pfu5e0Zv7YyC
6F/7Pc1IWrQ64hHf7bkB5ccatNH7fmtpvqMmTO7/+zfrSEq4Rm5pb/zSGvZs
9L7vrdANwD6wwA6yre33Hej3543+IcRKtBRs0niPDfxRoUQL7iTSfoCVkCC5
Rfy+OaMXY5Hmj5jE//Ql9PjFLv5iF3+xi/992MVnhSNTS1J89C+eO1PYgtFC
7Jsm5oVO7HYY7CE82tFVhDK/gvrAaVRabjmyj88ZqZFJLcwcUkt4GGGj6H5U
OvOYj8sRfn4bWUbGdevUIO38wZNfiW3DJLtFypGt4svzzio+HMbJVKzm4+1s
N9Q1VzayZ9E4nskeY8bd09aCxqFavNeHjjCyJ/ETqNn6llpA3pWFp6yGh8g0
agHPCnu8oT2jNqwK9LV6wos95GPc9OG2pRXRPHlzj+ywKCs3NHBaWU34SLQJ
HoG3yGDyMCbZ6GEnuJ9iSjuf7NFOhcZNtUm1HjTKJ3FEE4EGa0GzeiU1rHb7
iCzIWdX2mC0EmrvRCb7mu5zG5WQdQdFvnpMNbnx9SCVV3HyUKJ5xd8ObUcLT
fjOubS38RUN0z11wyYElLzznhT2WaD9jBy3c+Y2MaeDpueWRRwFATrJcjlJy
vCEL+Onxd+Z9smIDczrjMqkmdmfeohzbo8TdjjjSNcHdaKH+Z+3Xof3Hep7k
Uyt0eYr3uOXODQcM8C7f57rDzQP8vS+872ShY8t4iLjspOGc8oFbzq3tKogP
ZG5nOX3PS8qmo2lNG1eW0vYI6SDijbUpYlFtrE15YjI9Lkl5YgnI59/74003
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
wjrYcZLebG/9P3q0Fl3JsQAA

-->

</rfc>

