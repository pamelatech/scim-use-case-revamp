<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 3.3.5) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-correia-scim-use-cases-03" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2024" month="October" day="21"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 41?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 45?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
The specifications have two primary goals:
 1. A common representation of a resource object and its attributes.
 2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:
 * CRUD: Create, Read, Update, Delete
 * ERC: External Resource Creator 
 * IaaS: Infrastructure as a Service
 * IDaaS: Identity as a Service
 * IdM: Identity Manager
 * JIT: Just In Time
 * RC: Resource Creator
 * RU: Resource Updater
 * RM: Resource Manager 
 * RS: Resource Subscriber 
 * RO: Resource Object 
 * RA: Resource Attribute 
 * SaaS: Software as a Service
 * SAML: Security Assertion Markup Language
 * SCIM: System for Cross-domain Identity Management
 * SET: Security Event Token
 * SSO: Single Sign-On</t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +--------+
 |  SCIM   |                       |        | 
 | Server  |                       |        | 
 |         | <--- SCIM Action ---  |  SCIM  |
 | /Users  |                       | Client |
 | /Groups |                       |        |
 | /Device |                       |        |
 +---------+                       +--------+
    Figure 1: SCIM Components
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="resource-object-ro"><name>Resource Object (RO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="resource-attribute-ra"><name>Resource Attribute (RA)</name>
<t>A named element of a Resource Object (RO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the Resource Object (RO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific Resource Attributes (RA) of a Resource Object (RO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific Resource Attributes (RA) and/or Resource Objects (RO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms Resource Objects (RO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes Resource Objects (RO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about Resource Objects (RO) and their Resource Attributes (RA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RO) Resource| |(RA) Resource|   |(RO) Resource| |(RA) Resource|
   |   Object1   | |  Attribute1 |   |   Object2   | |  Attribute2 |
   +-------------+ +-------------+   +-------------+ +-------------+
          |               |                 |               |
   +-------------+ +-------------+   +-------------+ +-------------+
   |(RC) Resource| |(RU) Resource|   |(RC) Resource| |(RU) Resource|
   |  Creators   | |  Updaters   |   |  Creators   | |  Updaters   |
   +-------------+ +-------------+   +-------------+ +-------------+
       |               |                 |                |
       +--------+------+-----------------+-------+--------+
                |                                |
                v                                v
       +----------------+              +----------------+
       | (RM) Resource  |              | (RM) Resource  |
       |     Manager    |              |     Manager    |
       +----------------+              +----------------+
                |                                |
       +----------------+              +----------------+
       |                |              |                |
       v                v              v                v
  +-------------+ +-------------+   +-------------+ +-------------+
  |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
  |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
  +-------------+ +-------------+   +-------------+ +-------------+
          |                                  |
    +----------------+                  +----------------+
    |                |                  |                |
    v                v                  v                v
 +-------------+ +-------------+   +-------------+ +-------------+
 |(RO) Resource| |(RO) Resource|   |(RO) Resource| |(RO) Resource|
 |   Object1   | |   Object2   |   |   Object1   | |   Object2   |
 +-------------+ +-------------+   +-------------+ +-------------+
    Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
    Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some Resource Attributes (RA) of a Resource Object (RO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional Resource Attributes (RA) of the previously created Resource Objects (RO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
    Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual Resource Objects (RO) or Resource Attributes (RA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of Resource Objects (RO) and their Resource Attributes (RA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of Resource Objects (RO) and their Resource Attributes (RA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 7:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
 In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         |
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 8:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
 Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
 The Resource Subscriber (RS) will decide which RA (Resource Attributes) to consider and how the RO (Resource Object) will appear in its resource database.
 Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the single-tenant RS.
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 9: Single-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 10: Single-Tenant Resource Subscriber that is the SCIM 
      Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) to the multi-tenant RS (Resrouce Subscriber).
 A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 11: Multi-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the Resource Object (RO) and its Resource Attributes (RA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant Resource Attributes (RA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates Resrouce Object (RO) either in central IdM (Identity Management) system or directly in a target aplications.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 13: Single-Tenant Resource Creator/Updater that is the 
       SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 14: Single-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers RO (Resource Objects) and their RA (Resource Attributes) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates Resource Objects (RO) either in a central IdM (Identity Management) system or directly in target applications.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 15: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the RO (Resource Objects) and their RA (Resource Attributes).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional RA (Resource Attributes) to the RO (Resource Objects).</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 16: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive Resource Objects (RO) and their Resource Attributes (RA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which Resource Attributes (RA) to obtain from each source. There might also be independent agreements for different groups of Resource Objects (RO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the Resource Objects (RO) or some of their Resource Attributes (RA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 17: Single-Tenant Resource Manager that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of Resource Objects (RO) and their Resource Attributes (RA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 18: Single-Tenant Resource Manager that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of Resource Objects (RO) and their Resource Attributes (RA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide Resource Objects (RO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 19: Single-Tenant Resource Manager that is the SCIM Client
      and SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 20: Single-Tenant Resource Manager that is the SCIM Server 
      and SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The Resource Object (RO) of the device, provided by the manufacturer, includes its Resource Attributes (RA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the Resource Object (RO) in the customer's device database, it will be the server's responsibility to add and update the Resource Attributes (RA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the Resource Object (RO) to the customer's device management platform.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 21: Manufactor is the SCIM client and push RO to Customers 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the Resource Object (RO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the Resource Object (RO) from the multi-tenant SCIM server provided by the manufacturer.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 22: Manufactor is the SCIM Server and Customers Pull 
      information about Device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional Resource Attributes (RA) to be added to the Resource Object (RO) that is maintained in the device manager.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | <------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | <---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 23:  Commissioner tool provide Resource Attribtues to 
      Device Manager
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------> | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------> |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 24: Device manager provides RO and RA to the Devices 
      through Commissioner Tool
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | <------> | RA |
|  SCIM  | -------------> |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | <------> | RA |
+--------+                +---------------+          +----+
    Figure 25:  Device Manager provide Resource Attributes to the 
      Commissioner tool to configure device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the Resource Attributes (RA) of a Resource Object (RO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized Resource Attributes (RA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective Resource Attributes they are responsible for. They will use the SCIM action of Active Push to pass the Resource Attributes of the Resource Object to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.</t>

<figure><artwork><![CDATA[
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------> ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || <------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
    Figure 26: Single Ro with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific Resource Attributes (RA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the Resource Objects (RO). The Active/Delta Pull method will be used to retrieve the specialized Resource Attributes that are the responsibility of the application.</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | <------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
    Figure 27: Single RO with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that Resource Objects (RO) and its Resrouce Attributes (RA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
    Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>

<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <author initials="J." surname="Schreiber" fullname="J. Schreiber">
      <organization></organization>
    </author>
    <date year="2024" month="August"/>
  </front>
</reference>


    </references>

</references>


<?line 993?>



  </back>

<!-- ##markdown-source:
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
BPMU2azkWv5DMNVoI6prQayEzUBHKCXsBux6kGPpcPySn7LXwJIunM/vrbfY
xqqCDi91AVxGo9LqPrvScj5HZwhqOEX08n3xxRdpc4cH1Jf3YIBFRypJ5IRW
goF3mmgu2GjqOMJ2v+hokkfjy+PDAzZKVZAoSFFNwJ0bkKBkR0iOnqTd82hs
l3jwzTGp/VPaStDz0wNjF1o180V3BdGa6YwO7GTi5mEqbh2wB3/UvApBQtw/
kLqB6GiTdhR9FaRiwVhEXa6U9PomWOlLgb6MbmMvf+lZzah+H41HtKDg3i6Z
qIJxznsXf5hsEx6apEcjiI2/gNfzuTgnMshMcLEKLY2VhfN7FKAu1hwdK0eG
lGyl2bKprFyBkONVI8zxgMjH67dWy3o+YFOlKsHrAXAnrtdBv8MVbPV2pCku
VA6c5uueDnScnwRPytKwKTekkcPqo1rpKeF/ph6KRLdgGppoL1HQTYOTGoIt
vwzZqF67zkD7J62HueGCfkR6nSzkiqO2CZTBHROj/jznID0ue4IGF+kAP3Ry
+wgV4Pe1uqmd3eW/BLn4ltxHGmnEOWNuxDTlqKQVBT9TcJunipOn29YZGmUj
QYsILIZZU4HREKicZAzZAOj+sir3oOII3HHB42wVaXFKkxKHz/b4mIbpCjr7
Kfejr5T3tUsRTy6MLjotUdiiSCUioCWYSe/jfy/WuXvWqcFociWSOm0dOI+1
laznrW0jbQeP7I2YGmnxrHT2ozHO35Y7ImMAJOwTrSOXyLoiK3QRC7+xmjie
myGsNTpfQTnFHpAygF6FsW6DKAaYbnHYcaeySa91M+NN/7CVd9s/f3C7Iuvw
IPuQTiKeD2Lv9Tw4GrFPC8oG2k7o+8yXzWk0grSP2oBSh2NCKw8sDW8NYfi3
sOR7HrLDg1HN3ELDrJDC4DQDfwOzTKUD1yRrS7ESpGk5hgOKCQfSSRwIPVzd
+5mOxmfuvLqeAx27+GkBD3rrsJ/LX61XsgBD3PlZYWgw2xkqVLJmP4xhDi0H
EQXqxhfHmcpFCwzrv3EgOtMEyKGXBJJYd7LOVcWOxu+2T7aBB1HzdCp1jxg0
KAc3Sz2YKq7VJYS4RDXbvEDei1io+u9NTXwcFTTiy0hXJBpoVaoKg2DSOI2R
JhHP6e5R87p8nm7FpbOLaSN7ls4782CjsqWjEc3nWsy5RZcFs5rXBpiV6e+A
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
TXnx/vDg/wPST8q/FyIBAA==

-->

</rfc>

